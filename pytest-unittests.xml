<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="6" tests="76" time="5.033" timestamp="2022-11-08T13:04:42.236862" hostname="staff-net-etx-0578.intern.ethz.ch"><testcase classname="tests.unittest.test_pickle_able" name="test_analog_signals" time="0.085" /><testcase classname="tests.unittest.test_pickle_able" name="test_leapfrog" time="0.099" /><testcase classname="tests.unittest.test_pickle_able" name="test_digital_control" time="0.088" /><testcase classname="tests.unittest.test_pickle_able" name="test_analog_system" time="0.098" /><testcase classname="tests.unittest.test_pickle_able" name="test_chain_of_integrator" time="0.099" /><testcase classname="tests.unittest.test_pickle_able" name="test_filters" time="0.148" /><testcase classname="tests.unittest.test_pickle_able" name="test_digital_estimator[batch_de]" time="1.497" /><testcase classname="tests.unittest.test_pickle_able" name="test_digital_estimator[par-batch-de]" time="1.472" /><testcase classname="tests.unittest.test_pickle_able" name="test_digital_estimator[IIR_de]" time="1.396" /><testcase classname="tests.unittest.test_pickle_able" name="test_adaptive_filter_and_calibrator" time="1.454" /><testcase classname="tests.unittest.test_pickle_able" name="test_digital_estimator[FIR_de]" time="1.422" /><testcase classname="tests.unittest.test_pickle_able" name="test_simulator[an_sim]" time="0.024"><skipped type="pytest.skip" message="Can't pickle sympy matrices">/Users/hammal/Projects/cbadc/tests/unittest/test_pickle_able.py:215: Can't pickle sympy matrices</skipped></testcase><testcase classname="tests.unittest.test_pickle_able" name="test_simulator[pre_num_sim]" time="0.342" /><testcase classname="tests.unittest.test_pickle_able" name="test_simulator[full_num_sim]" time="0.044" /><testcase classname="tests.unittest.test_pickle_able" name="test_simulator[mp_sim]" time="0.017"><skipped type="pytest.skip" message="Can't pickle sympy matrices">/Users/hammal/Projects/cbadc/tests/unittest/test_pickle_able.py:215: Can't pickle sympy matrices</skipped></testcase><testcase classname="tests.unittest.test_pickle_able" name="test_analog_frontend" time="0.050" /><testcase classname="tests.unittest.test_analog_signals.analog_signal_test" name="test_evaluate" time="0.097" /><testcase classname="tests.unittest.test_pickle_able" name="test_testbench" time="0.223" /><testcase classname="tests.unittest.test_analog_signals.analog_signal_test" name="test_evaluate_offset" time="0.096" /><testcase classname="tests.unittest.test_analog_signals.analog_signal_test" name="test_initialization" time="0.150" /><testcase classname="tests.unittest.test_analog_signals.analog_signal_test" name="test_properties" time="0.016" /><testcase classname="tests.unittest.test_analog_signals.analog_signal_test" name="test_symbolic" time="0.020" /><testcase classname="tests.unittest.test_analog_signals.clock_test" name="test_clock_numeric" time="0.067" /><testcase classname="tests.unittest.test_analog_signals.impulse_responses_test" name="test_step_response" time="0.140" /><testcase classname="tests.unittest.test_analog_signals.impulse_responses_test" name="test_RC_impulse_response" time="0.351" /><testcase classname="tests.unittest.test_analog_signals.sincpulse_signal_test" name="test_initialization" time="0.019" /><testcase classname="tests.unittest.test_analog_signals.sincpulse_signal_test" name="test_evaluate_multiple" time="0.001"><skipped type="pytest.skip" message="Somehow precision issues with since? This is a bug that should be resolved ASAP.">/Users/hammal/Projects/cbadc/tests/unittest/test_analog_signals/sincpulse_signal_test.py:16: Somehow precision issues with since? This is a bug that should be resolved ASAP.</skipped></testcase><testcase classname="tests.unittest.test_analog_signals.sincpulse_signal_test" name="test_evaluate_with_offset" time="0.001"><skipped type="pytest.skip" message="Somehow precision issues with since? This is a bug that should be resolved ASAP.">/Users/hammal/Projects/cbadc/tests/unittest/test_analog_signals/sincpulse_signal_test.py:41: Somehow precision issues with since? This is a bug that should be resolved ASAP.</skipped></testcase><testcase classname="tests.unittest.test_analog_signals.sincpulse_signal_test" name="test_properties" time="0.000"><skipped type="pytest.skip" message="Somehow precision issues with since? This is a bug that should be resolved ASAP.">/Users/hammal/Projects/cbadc/tests/unittest/test_analog_signals/sincpulse_signal_test.py:63: Somehow precision issues with since? This is a bug that should be resolved ASAP.</skipped></testcase><testcase classname="tests.unittest.test_analog_signals.sincpulse_signal_test" name="test_symbolic" time="0.000"><skipped type="pytest.skip" message="Somehow precision issues with since? This is a bug that should be resolved ASAP.">/Users/hammal/Projects/cbadc/tests/unittest/test_analog_signals/sincpulse_signal_test.py:78: Somehow precision issues with since? This is a bug that should be resolved ASAP.</skipped></testcase><testcase classname="tests.unittest.test_analog_signals.sinusoidal_signal_test" name="test_initialization" time="0.017" /><testcase classname="tests.unittest.test_analog_signals.sinusoidal_signal_test" name="test_evaluate" time="0.022" /><testcase classname="tests.unittest.test_analog_signals.sinusoidal_signal_test" name="test_evaluate_with_offset_and_phase" time="0.021" /><testcase classname="tests.unittest.test_analog_signals.sinusoidal_signal_test" name="test_properties" time="0.021" /><testcase classname="tests.unittest.test_analog_system.constructor_test" name="test_correct_initialization" time="0.023" /><testcase classname="tests.unittest.test_analog_signals.sinusoidal_signal_test" name="test_symbolic" time="0.347" /><testcase classname="tests.unittest.test_analog_system.constructor_test" name="test_chain_of_integrators_fixture" time="0.023" /><testcase classname="tests.unittest.test_analog_system.constructor_test" name="test_wrong_n_B" time="0.028" /><testcase classname="tests.unittest.test_analog_system.constructor_test" name="test_non_square_system_matrix" time="0.019" /><testcase classname="tests.unittest.test_analog_system.constructor_test" name="test_wrong_n_C" time="0.020" /><testcase classname="tests.unittest.test_analog_system.constructor_test" name="test_wrong_n_Gamma_tilde" time="0.019" /><testcase classname="tests.unittest.test_analog_system.constructor_test" name="test_wrong_n_Gamma" time="0.020" /><testcase classname="tests.unittest.test_analog_system.filter_test" name="test_Butterworth" time="0.040" /><testcase time="0.008" /><testcase classname="tests.unittest.test_analog_system.derivative_test" name="test_derivative" time="0.028" /><testcase classname="tests.unittest.test_analog_system.filter_test" name="test_ChebyshevI" time="0.037" /><testcase time="0.010" /><testcase classname="tests.unittest.test_analog_system.filter_test" name="test_ChebyshevII" time="0.019" /><testcase time="0.005" /><testcase classname="tests.unittest.test_analog_system.filter_test" name="test_Cauer" time="0.022" /><testcase time="0.005" /><testcase classname="tests.unittest.test_analog_system.state_space_transfomration_test" name="test_sos2abcd" time="0.017" /><testcase classname="tests.unittest.test_analog_system.state_space_transfomration_test" name="test_zpk2abcd_single_pole" time="0.022" /><testcase classname="tests.unittest.test_analog_system.state_space_transfomration_test" name="test_zpk2abcd_double_pole" time="0.031" /><testcase classname="tests.unittest.test_analog_system.state_space_transfomration_test" name="test_tf2abcd" time="0.020" /><testcase classname="tests.unittest.test_analog_system.state_space_transfomration_test" name="test_chain" time="0.034" /><testcase classname="tests.unittest.test_analog_system.state_space_transfomration_test" name="test_stack" time="0.029" /><testcase classname="tests.unittest.test_analog_system.sympy_test" name="test_homogenous_equations" time="0.144" /><testcase time="0.014" /><testcase classname="tests.unittest.test_circuit_level.noise_models_test" name="test_resistor_voltage_noise_formula" time="0.020" /><testcase classname="tests.unittest.test_circuit_level.noise_models_test" name="test_resistor_current_noise_formula" time="0.017" /><testcase classname="tests.unittest.test_circuit_level.noise_models_test" name="test_KTC_formula" time="0.017" /><testcase classname="tests.unittest.test_circuit_level.state_space_equations_test" name="test_AnalogSystemModule" time="0.102" /><testcase classname="tests.unittest.test_digital_control.digital_control_test" name="test_initialization" time="0.023" /><testcase classname="tests.unittest.test_digital_control.digital_control_test" name="test_evaluate" time="0.022" /><testcase classname="tests.unittest.test_circuit_level.state_space_equations_test" name="test_AnalogSystemModule_module_comment" time="0.029" /><testcase classname="tests.unittest.test_digital_control.digital_control_test" name="test_control_signal" time="0.024" /><testcase classname="tests.unittest.test_digital_control.multi_level_digital_control_test" name="test_initialization" time="0.022" /><testcase classname="tests.unittest.test_digital_control.multi_level_digital_control_test" name="test_evaluate" time="0.020" /><testcase classname="tests.unittest.test_digital_control.multi_level_digital_control_test" name="test_evaluate_2_levels" time="0.022" /><testcase classname="tests.unittest.test_digital_control.multi_level_digital_control_test" name="test_evaluate_3_levels" time="0.020" /><testcase classname="tests.unittest.test_digital_control.multi_level_digital_control_test" name="test_evaluate_4_levels" time="0.020" /><testcase time="0.012" /><testcase time="0.012" /><testcase classname="tests.unittest.test_digital_estimator.adaptive_fir_filter_test" name="test_init_filter" time="0.019" /><testcase time="0.024" /><testcase classname="tests.unittest.test_digital_estimator.adaptive_fir_filter_test" name="test_initializer" time="0.029" /><testcase classname="tests.unittest.test_digital_estimator.adaptive_fir_filter_test" name="test_number_of_filter_coefficients" time="0.030" /><testcase classname="tests.unittest.test_digital_estimator.adaptive_fir_filter_test" name="test_impulse_response" time="0.030" /><testcase classname="tests.unittest.test_digital_estimator.adaptive_fir_filter_test" name="test_frequency_response" time="0.027" /><testcase classname="tests.unittest.test_digital_estimator.adaptive_fir_filter_test" name="test_fixed_step_size" time="0.019" /><testcase classname="tests.unittest.test_digital_estimator.adaptive_fir_filter_test" name="test_exponential_step_size" time="0.019" /><testcase classname="tests.unittest.test_digital_estimator.adaptive_fir_filter_test" name="test_adaptive_FIR_filter" time="0.023"><failure message="ValueError: h must have length M">setup2 = (1, 5, [1024, 512, 256, 128, 64], [[array([-2.25958836e-05, -7.80210868e-06,  7.81996513e-06, ...,
        7.81996513e-06, -7.80210868e-06, -2.25958836e-05])]], [0])

    def test_adaptive_FIR_filter(setup2):
        L, M, K, h0, reference_index = setup2
&gt;       adaptive_filter = cbadc.digital_estimator.fir_estimator.AdaptiveFIRFilter(h0, K, reference_index)

tests/unittest/test_digital_estimator/adaptive_fir_filter_test.py:99: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;cbadc.digital_estimator.fir_estimator.AdaptiveFIRFilter object at 0x16bce6dc0&gt;, h = [[array([-2.25958836e-05, -7.80210868e-06,  7.81996513e-06, ...,
        7.81996513e-06, -7.80210868e-06, -2.25958836e-05])]], K = [1024, 512, 256, 128, 64], reference_index = [0]
downsample = 1, method = 'rls', kwargs = {}, l = 0, temp = [1, 2, 3, 4], m = 4, h_l = [array([-2.25958836e-05, -7.80210868e-06,  7.81996513e-06, ...,
        7.81996513e-06, -7.80210868e-06, -2.25958836e-05])]

    def __init__(
        self,
        h: List[List[np.ndarray]],
        K: List[int],
        reference_index: List[int],
        downsample: int = 1,
        method='rls',
        **kwargs,
    ):
    
        self.analog_system = cbadc.analog_system.AnalogSystem(
            np.zeros((1, 1)),
            np.zeros((1, len(h))),
            np.zeros((1, 1)),
            np.zeros((1, len(K))),
            np.zeros((len(K), 1)),
        )
        self.K = [k for k in K]
        self._K_max = max(self.K)
        self.downsample = downsample
    
        # self._temp_buffer = np.zeros((self.analog_system.M, self.downsample))
        # # reset control signal buffer
        # self.control_signals = np.zeros((self.analog_system.M, self._K_max))
    
        self.reference_index = [s for s in reference_index]
        if len(self.reference_index) != self.analog_system.L:
            raise ValueError("reference_index must have length L")
    
        self.calibration_indexes = []
        for l in range(self.analog_system.L):
            temp = []
            for m in range(self.analog_system.M):
                if m != self.reference_index[l]:
                    temp.append(m)
            self.calibration_indexes.append(temp)
    
        self.offset = np.zeros(self.analog_system.L, dtype=np.float64)
        self.h = [
            [np.zeros(self.K[m], dtype=np.float64) for m in range(self.analog_system.M)]
            for _ in range(self.analog_system.L)
        ]
        # size L x M x K[m]
        if len(h) != self.analog_system.L:
            raise ValueError("h must have length L")
        for l, h_l in enumerate(h):
            if len(h_l) != self.analog_system.M:
&gt;               raise ValueError("h must have length M")
E               ValueError: h must have length M

.tox/py38/lib/python3.8/site-packages/cbadc/digital_estimator/fir_estimator.py:930: ValueError</failure></testcase><testcase classname="tests.unittest.test_digital_estimator.digital_estimator_test" name="test_initialization" time="0.990" /><testcase time="0.005" /><testcase time="0.007" /></testsuite></testsuites>