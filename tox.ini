[tox]
envlist = linters,doc-test,py38,py39,py310,full-test,report,clean,tutorials,benchmark
plattform = linux | darwin
isolated_build = True


[testenv:py3{8,9,10}]
description = run unit-tests.
deps =
    pytest
    pytest-parallel
    pytest-cov
    -rrequirements.txt

commands =
    pytest --workers auto --cov-append --junitxml=pytest-unittests.xml --cov=cbadc tests/unittest

[testenv:doc-test]
description = run doc tests
deps =
    pytest
    pytest-parallel
    pytest-cov
    -rrequirements.txt
commands =
    pytest --workers auto --cov=cbadc --doctest-modules --junitxml=pytest-doctests.xml src/cbadc

[testenv:full-test-fir-filter]
description = run full performance comparision for FIR filter
deps =
    pytest
    pytest-parallel
    pytest-cov
    -rrequirements.txt
commands =
    pytest --workers auto tests/performance_validation/digital_estimator_FIR_filter_fixed_point_test.py
    pytest --workers auto tests/performance_validation/digital_estimator_implementation_comparision_test.py
    pytest --workers auto tests/performance_validation/digital_estimator_test.py


[testenv:full-test-simulator]
description = run full performance comparision for simulators
deps =
    pytest
    pytest-parallel
    pytest-cov
    -rrequirements.txt
commands =
    pytest --workers auto tests/performance_validation/simulator_test.py

[testenv:full-test]
description = run full performance comparision
deps =
    pytest
    pytest-parallel
    pytest-cov
    -rrequirements.txt
commands =
    pytest --workers auto tests/performance_validation/full_test.py


[testenv:full-test-switch-cap-control]
description = run full performance comparision
deps =
    pytest
    pytest-parallel
    pytest-cov
    -rrequirements.txt
commands =
    pytest --workers auto tests/performance_validation/full_test_switch_cap.py




[testenv:verilog-ams]
description = validate verilog-ams code
deps =
    pytest
    pytest-parallel
    pytest-cov
    pade @ git+https://git@github.com/fredrief/pade.git@v0.1.0
    -rrequirements.txt
commands =
    pytest --workers auto tests/unittest/test_circuit_level
    pytest tests/cadence_validation

[testenv:circuit-level-python]
description = validate python circuit-level simulators
deps =
    pytest
    pytest-parallel
    pytest-cov
    -rrequirements.txt
commands =
    pytest --workers auto tests/cadence_validation/python_simulator_circuit_level_test.py


[testenv:verilog-ams]
description = validate verilog-ams code
deps =
    pytest
    pytest-parallel
    pytest-cov
    pade @ git+https://git@github.com/fredrief/pade.git@v0.1.0
    -rrequirements.txt
commands =
    pytest --workers auto tests/unittest/test_circuit_level
    pytest tests/cadence_validation


[testenv:benchmark]
description = run benchmarking
deps =
    pytest
    pytest-parallel
    pytest-cov
    pytest-benchmark
    pytest-benchmark[histogram]
    -rrequirements.txt
commands =
    pytest --workers auto --benchmark-compare --benchmark-histogram --benchmark-save-data benchmark




[testenv:tutorials]
description = run tutorials
deps =
    -rrequirements.txt
commands =
    python docs/code_examples/a_getting_started/plot_b_simulate_a_control_bounded_adc.py
    python docs/code_examples/a_getting_started/plot_c_digital_estimator.py
    python docs/code_examples/a_getting_started/plot_d_transfer_function.py
    python docs/code_examples/b_high_level_simulation/plot_a_compare_estimator.py
    python docs/code_examples/b_high_level_simulation/plot_b_FIR_Filtering.py
    python docs/code_examples/b_high_level_simulation/plot_c_downsample.py
    python docs/code_examples/b_high_level_simulation/plot_d_fixed_point_aritmetics.py
    python docs/code_examples/b_high_level_simulation/plot_e_switched_capacitor_digital_control.py
    python docs/code_examples/b_high_level_simulation/plot_f_designing_a_leap_frog_to_specifications.py
    python docs/code_examples/b_high_level_simulation/plot_g_calibrating_mismatch.py
    python docs/code_examples/b_high_level_simulation/plot_h_calibrating_from_numpy_simulator.py
    python docs/code_examples/b_high_level_simulation/plot_i_simulating_a_delta_sigma_modulator.py
    python docs/code_examples/c_circuit_level/plot_a_analog_system.py
    python docs/code_examples/c_circuit_level/plot_b_analog_frontend.py
    python docs/code_examples/c_circuit_level/plot_c_testbench.py
    python docs/code_examples/c_circuit_level/plot_d_noise.py
    python docs/code_examples/c_circuit_level/plot_e_linearity.py
    python docs/code_examples/d_further/plot_a_Murmann_ADC_survey.py
    python docs/code_examples/d_further/plot_z_artsy_sine.py

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:linters]
deps =
    flake8
    flake8-black
commands =
    flake8 src/cbadc
