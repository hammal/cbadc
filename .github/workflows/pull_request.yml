# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Linting, Testing and Benchmarking

on: [pull_request]

jobs:
  # check_lint:
  #   name: "Check if PEP8"
  #   runs-on: [self-hosted]
  #   steps:
  #     - name: Checkout github repo
  #       uses: actions/checkout@v2

  #     - name: Linting
  #       run: python3.8 -m tox -e linters

  # doc_and_unit_tests:
  #   strategy:
  #     matrix:
  #       python-version: ["py38", "py39", "py310"]
  #   runs-on: [self-hosted]
  #   needs: check_lint
  #   steps:
  #     - name: Checkout github repo
  #       uses: actions/checkout@v2

  #     - name: Run doctests
  #       run: python3.8 -m tox -e doc-test

  #     - name: Run unittests
  #       run: python3.8 -m tox -e ${{ matrix.python-version }}

  #     - name: Upload Unit Test Results
  #       if: always()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Unit Test Results (Python ${{ matrix.python-version }})
  #         path: pytest-unittests.xml

  #     - name: Upload Doc Test Results
  #       if: always()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Unit Test Results (Python ${{ matrix.python-version }})
  #         path: pytest-doctests.xml

  performance_validation:
    timeout-minutes: 3000
    runs-on: [self-hosted]
    # needs: doc_and_unit_tests
    steps:
      - name: Checkout github repo
        uses: actions/checkout@v2

      - name: Full performance validation
        run: python3.8 -m tox -e full-test

  tutorials:
    timeout-minutes: 3000
    runs-on: [self-hosted]
    # needs: doc_and_unit_tests
    steps:
      - name: Checkout github repo
        uses: actions/checkout@v2

      - name: Execute tutorials
        run: python3.8 -m tox -e tutorials

  benchmarks:
    timeout-minutes: 3000
    runs-on: [self-hosted]
    # needs: doc_and_unit_tests
    steps:
      - name: Checkout github repo
        uses: actions/checkout@v2

      - name: Benchmarking
        run: python3.8 -m tox -e benchmark

  # docs:
  #   runs-on: ubuntu-latest
  #  # needs: doc_and_unit_tests
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: ammaraskar/sphinx-action@master
  #       with:
  #         docs-folder: "docs/"

  publish-test-results:
    name: "Publish Unit Tests Results"
    # needs: doc_and_unit_tests
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml
