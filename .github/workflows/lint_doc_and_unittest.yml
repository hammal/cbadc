# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: linting, doc, and unit testing

on: pull_request

jobs:
  lint_and_unit_tests:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Install cbadc dependencies
        run: |
          pip install -r requirements.txt;
          pip install .
      - name: Run doctests
        run: pytest --cov=cbadc --doctest-modules --junitxml=pytest-doctests.xml src/cbadc

      - name: Run unittests
        run: pytest --cov-append --junitxml=pytest-unittests.xml --cov=cbadc tests/unittest

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Python ${{ matrix.python-version }})
          path: pytest-unittests.xml

      - name: Upload Doc Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Python ${{ matrix.python-version }})
          path: pytest-doctests.xml

  # publish-test-results:
  #   name: "Publish Unit Tests Results"
  #   needs: lint_and_unit_tests
  #   runs-on: ubuntu-latest
  #   if: always()

  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         path: artifacts

  #     - name: Publish Unit Test Results
  #       uses: EnricoMi/publish-unit-test-result-action@v1
  #       with:
  #         files: artifacts/**/*.xml
