# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: linting, doc, and unit testing

on: workflow_call

jobs:
  check_lint:
    name: "Check if PEP8"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout github repo
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install flake8

      - name: Linting
        run: flake8 src/cbadc

  # doc_and_unit_tests:
  #   # strategy:
  #   #   matrix:
  #   #     python-version: ["py38", "py39", "py310"]
  #   runs-on: [self-hosted]
  #   # needs: check_lint
  #   steps:
  #     - name: Checkout github repo
  #       uses: actions/checkout@v2

  #     - name: Setup python
  #       run: python3 -m pip install . && python3 -m pip install -r requirements.txt

  #     - name: Run doctests
  #       run: pytest --cov=cbadc --doctest-modules --junitxml=pytest-doctests.xml src/cbadc

  #     - name: Run unittests
  #       run: pytest --cov-append --junitxml=pytest-unittests.xml --cov=cbadc tests/unittest

  #     - name: Upload Unit Test Results
  #       if: always()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Unit Test Results (Python ${{ matrix.python-version }})
  #         path: pytest-unittests.xml

  #     - name: Upload Doc Test Results
  #       if: always()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Unit Test Results (Python ${{ matrix.python-version }})
  #         path: pytest-doctests.xml

  # publish-test-results:
  #   name: "Publish Unit Tests Results"
  #   needs: doc_and_unit_tests
  #   runs-on: ubuntu-latest
  #   if: always()

  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         path: artifacts

  #     - name: Publish Unit Test Results
  #       uses: EnricoMi/publish-unit-test-result-action@v1
  #       with:
  #         files: artifacts/**/*.xml
