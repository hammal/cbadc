
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "simulations/hadamard.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_simulations_hadamard.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_simulations_hadamard.py:


Loading a Hadamard Ramp Simulation
==================================

Builds on...

.. GENERATED FROM PYTHON SOURCE LINES 7-13

.. code-block:: default
   :lineno-start: 7

    import cbadc
    import cbadc.examples.hadamard
    import scipy.signal
    import numpy as np
    import matplotlib.pyplot as plt


.. GENERATED FROM PYTHON SOURCE LINES 14-19

Create a Simulation Wrapper
----------------------------

We load the PCB A prototype by instantiating
the wrapper class as

.. GENERATED FROM PYTHON SOURCE LINES 19-22

.. code-block:: default
   :lineno-start: 20


    simulation_wrapper = cbadc.examples.hadamard.HadamardPCB('B')


.. GENERATED FROM PYTHON SOURCE LINES 23-29

Load a specific simulation
---------------------------

In this case we load
:py:func:`cbadc.examples.HadamardPCB.simulation_ramp_1_B`
simulation by invoking

.. GENERATED FROM PYTHON SOURCE LINES 29-33

.. code-block:: default
   :lineno-start: 30


    control_signal, ideal_control_signal, simulator, size = simulation_wrapper.simulation_ramp_1_B()

    size = 1 << 12

.. GENERATED FROM PYTHON SOURCE LINES 34-37

Configure a Digital Estimator
-----------------------------


.. GENERATED FROM PYTHON SOURCE LINES 37-55

.. code-block:: default
   :lineno-start: 37

    eta2 = 1e5
    L1 = 1 << 10
    L2 = 1 << 10
    OSR = 1 << 5


    digital_estimator = cbadc.digital_estimator.FIRFilter(
        simulator.analog_system,
        simulator.digital_control,
        eta2,
        L1,
        L2,
        downsample=OSR)

    print(digital_estimator, "\n")

    digital_estimator(control_signal)


.. GENERATED FROM PYTHON SOURCE LINES 56-59

Post filtering with FIR
------------------------------------


.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: default
   :lineno-start: 60


    numtaps = 1 << 10
    f_cutoff = 1.0 / OSR
    fir_filter = scipy.signal.firwin(numtaps, f_cutoff)

    digital_estimator.convolve((fir_filter))


.. GENERATED FROM PYTHON SOURCE LINES 67-70

Filtering Estimate
--------------------


.. GENERATED FROM PYTHON SOURCE LINES 70-75

.. code-block:: default
   :lineno-start: 71


    u_hat = np.zeros(size // OSR)
    for index in cbadc.utilities.show_status(range(size // OSR)):
        u_hat[index] = next(digital_estimator)


.. GENERATED FROM PYTHON SOURCE LINES 76-79

Visualize Estimate
--------------------


.. GENERATED FROM PYTHON SOURCE LINES 79-91

.. code-block:: default
   :lineno-start: 80


    t = np.arange(size // OSR) * OSR
    plt.plot(t, u_hat, label="$\hat{u}(t)$")
    plt.xlabel('$t / T$')
    plt.legend()
    plt.title("Estimated input signal")
    plt.grid(which='both')
    # offset = (L1 + L2) * 4
    # plt.xlim((offset, offset + 1000))
    plt.ylim((-0.6, 0.6))
    plt.tight_layout()


.. GENERATED FROM PYTHON SOURCE LINES 92-95

Visualize Estimate Spectrum
---------------------------


.. GENERATED FROM PYTHON SOURCE LINES 95-108

.. code-block:: default
   :lineno-start: 96


    plt.figure()
    u_hat_clipped = u_hat[(L1 + L2) // OSR:]
    freq, psd = cbadc.utilities.compute_power_spectral_density(
        u_hat_clipped, fs=1.0/(simulator.digital_control.T * OSR))
    plt.semilogx(freq, 10 * np.log10(psd), label="$\hat{U}(f)$")
    plt.legend()
    plt.ylim((-300, 50))
    # plt.xlim((f_ref[1], f_ref[-1]))
    plt.xlabel('$f$ [Hz]')
    plt.ylabel('$ \mathrm{V}^2 \, / \, (1 \mathrm{Hz})$')
    plt.grid(which='both')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_simulations_hadamard.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: hadamard.py <hadamard.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: hadamard.ipynb <hadamard.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
