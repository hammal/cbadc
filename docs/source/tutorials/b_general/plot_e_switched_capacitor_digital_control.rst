
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/b_general/plot_e_switched_capacitor_digital_control.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorials_b_general_plot_e_switched_capacitor_digital_control.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_b_general_plot_e_switched_capacitor_digital_control.py:


Switched-Capacitor Digital Control
==================================

In this tutorial we show how to use switched-capacitor digital control
in combination with a continuous-time system.

.. GENERATED FROM PYTHON SOURCE LINES 8-13

.. code-block:: default

    import cbadc
    import scipy
    import numpy as np
    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 14-48

Integration Node
----------------

Initially we consider a integration node as shown in the figure below.

.. image:: /images/RC-amp.svg
   :width: 500
   :align: center
   :alt: The RC integrator with switched-capacitor digital control.

Which is goverened by the differential equations

:math:`\dot{v}_{x_{\ell}}(t) = \frac{1}{C_{x_{\ell}}} \left( \frac{v_{\Gamma_{\ell}}(t) - v_{s_\ell}(t)}{R_{s}} - \frac{1}{R_{\beta_\ell}}  v_{x_{\ell - 1}}(t) \right)`

:math:`\dot{v}_{\Gamma_{\ell}}(t) = \frac{1}{2R_{s} C_{\Gamma_{\ell}}} \left( v_{s_\ell}(t) - v_{\Gamma_{\ell}}(t) \right)`

during phase :math:`\phi_1` and

:math:`\dot{v}_{x_{\ell}}(t)  =  - \frac{1}{R_{\beta_\ell} C_{x_{\ell}}} v_{x_{\ell - 1}}(t)`

:math:`\dot{v}_{\Gamma_{\ell}}(t) = - \frac{1}{2 R_{s} C_{\Gamma_{\ell}}}  v_{\Gamma_{\ell}}(t)`

during phase :math:`\bar{\phi}_1` where a full control phase :math:`T = T_{\phi_1} + T_{\bar{\phi}_1}`.

To simulate this control-bounded converter we need to specify the whole system which for this
tutorial will be a chain-of-integrators system as shown below.

.. image:: /images/chainOfIntegratorsGeneral.svg
   :width: 1500
   :align: center
   :alt: The chain-of-integrators ADC.

where the digital controls are implemented as above.
Thus the system equations can be written as

.. GENERATED FROM PYTHON SOURCE LINES 48-65

.. code-block:: default


    N = 4
    M = N

    C_x = 1e-9
    C_Gamma = C_x / 2
    R_s = 1e1
    R_beta = 1e3

    beta = 1 / (R_beta * C_x)
    T = 1 / (2 * beta)

    A = beta * np.eye(N, k=-1)
    B = np.zeros(N)
    B[0] = beta
    CT = np.eye(N)








.. GENERATED FROM PYTHON SOURCE LINES 66-84

Simplifying the Differential Equation
-------------------------------------

Due to the virtual ground of the op-amp integrator we can treat the
second differential equation (the one involving :math:`v_{\Gamma_\ell}(t)`)
seperately. Specifically, if we assume the
capacitor :math:`C_{\Gamma}` empties completely during :math:`\bar{\phi}_1`,
and that :math:`v_{s_\ell} = \{\pm 1\}` for all :math:`t`, the digital
control's effect on the analog system can be written as

:math:`v_{\Gamma_\ell}(t) - v_{s_\ell}(t) = v_{s_\ell}(t) \cdot e^{-t/\tau}`

where :math:`\tau=R_s C_{\Gamma_\ell}`.

This can be modeled by instantiating the digital control
:class:`cbadc.digital_control.DigitalControl`
using the impulse response :func:`cbadc.digital_control.RCImpulseResponse`
as

.. GENERATED FROM PYTHON SOURCE LINES 84-98

.. code-block:: default


    impulse_response = cbadc.analog_signal.RCImpulseResponse(R_s * C_Gamma)
    digital_control_sc = cbadc.digital_control.DigitalControl(
        cbadc.analog_signal.Clock(T), M, impulse_response=impulse_response
    )

    Gamma = 1 / (R_s * C_x) * np.eye(M)
    Gamma_tildeT = -np.eye(M)

    analog_system_sc = cbadc.analog_system.AnalogSystem(A, B, CT, Gamma, Gamma_tildeT)

    print(digital_control_sc)
    print(analog_system_sc)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ================================================================================

    The Digital Control is parameterized as:

    --------------------------------------------------------------------------------

    clock:
    Analog signal returns constant 0, i.e., maps t |-> 0.

    M:
    4
    ================================================================================

    The analog system is parameterized as:
    A =
    [[      0.       0.       0.       0.]
     [1000000.       0.       0.       0.]
     [      0. 1000000.       0.       0.]
     [      0.       0. 1000000.       0.]],
    B =
    [[1000000.]
     [      0.]
     [      0.]
     [      0.]],
    CT =
    [[1. 0. 0. 0.]
     [0. 1. 0. 0.]
     [0. 0. 1. 0.]
     [0. 0. 0. 1.]],
    Gamma =
    [[1.e+08 0.e+00 0.e+00 0.e+00]
     [0.e+00 1.e+08 0.e+00 0.e+00]
     [0.e+00 0.e+00 1.e+08 0.e+00]
     [0.e+00 0.e+00 0.e+00 1.e+08]],
    Gamma_tildeT =
    [[-1. -0. -0. -0.]
     [-0. -1. -0. -0.]
     [-0. -0. -1. -0.]
     [-0. -0. -0. -1.]], and D=[[0.]
     [0.]
     [0.]
     [0.]]




.. GENERATED FROM PYTHON SOURCE LINES 99-102

Visualizing the State Trajectories
----------------------------------


.. GENERATED FROM PYTHON SOURCE LINES 102-155

.. code-block:: default

    OSR = 32
    amplitude = 1.0
    analog_signal = cbadc.analog_signal.Sinusoidal(amplitude, 1 / T / (OSR << 4))
    Ts = T / 100.0
    size = 1 << 12

    simulator_sc = cbadc.simulator.extended_simulation_result(
        cbadc.simulator.get_simulator(
            analog_system_sc,
            digital_control_sc,
            [analog_signal],
            cbadc.analog_signal.Clock(Ts),
            simulator_type=cbadc.simulator.SimulatorType.analytical,
        )
    )


    analog_system_ref = cbadc.analog_system.AnalogSystem(
        A, B, CT, np.eye(N) * beta, Gamma_tildeT
    )
    digital_control_ref = cbadc.digital_control.DigitalControl(
        cbadc.analog_signal.Clock(T), M
    )
    simulator_ref = cbadc.simulator.extended_simulation_result(
        cbadc.simulator.get_simulator(
            analog_system_ref,
            digital_control_ref,
            [analog_signal],
            cbadc.analog_signal.Clock(Ts),
            simulator_type=cbadc.simulator.SimulatorType.analytical,
        )
    )

    states = np.zeros((size, N))
    states_ref = np.zeros_like(states)
    t = Ts * np.arange(size)

    # Simulations
    for time_step in cbadc.utilities.show_status(range(size)):
        states[time_step, :] = next(simulator_sc)["analog_state"]
        states_ref[time_step, :] = next(simulator_ref)["analog_state"]

    # Plot state trajectories
    for index in range(N):
        plt.figure()
        plt.title("Analog state trajectories for " + f"$x_{index + 1}(t)$")
        plt.plot(t / T, states[:, index], label="SC")
        plt.plot(t / T, states_ref[:, index], label="ref")
        plt.grid(visible=True, which="major", color="gray", alpha=0.6, lw=1.5)
        plt.xlabel("$t/T$")
        plt.legend()





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_001.png
         :alt: Analog state trajectories for $x_1(t)$
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_002.png
         :alt: Analog state trajectories for $x_2(t)$
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_003.png
         :alt: Analog state trajectories for $x_3(t)$
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_004.png
         :alt: Analog state trajectories for $x_4(t)$
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_004.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          | 0/4096 [00:00<?, ?it/s]      1%|1         | 50/4096 [00:00<00:12, 320.84it/s]      4%|3         | 149/4096 [00:00<00:08, 492.01it/s]      5%|4         | 198/4096 [00:00<00:08, 449.66it/s]      6%|5         | 243/4096 [00:00<00:10, 364.63it/s]      7%|7         | 296/4096 [00:00<00:09, 402.08it/s]      9%|8         | 352/4096 [00:00<00:08, 431.44it/s]     10%|9         | 397/4096 [00:00<00:08, 417.47it/s]     12%|#2        | 501/4096 [00:01<00:06, 576.71it/s]     14%|#3        | 562/4096 [00:01<00:08, 418.90it/s]     15%|#5        | 628/4096 [00:01<00:07, 448.70it/s]     17%|#6        | 679/4096 [00:01<00:07, 461.98it/s]     18%|#7        | 730/4096 [00:01<00:07, 460.90it/s]     19%|#9        | 797/4096 [00:01<00:06, 514.12it/s]     21%|##        | 860/4096 [00:01<00:07, 460.77it/s]     22%|##2       | 910/4096 [00:02<00:06, 455.52it/s]     24%|##3       | 972/4096 [00:02<00:06, 475.22it/s]     25%|##4       | 1022/4096 [00:02<00:07, 403.69it/s]     26%|##6       | 1084/4096 [00:02<00:06, 454.48it/s]     28%|##7       | 1133/4096 [00:02<00:07, 409.18it/s]     29%|##8       | 1177/4096 [00:02<00:07, 398.44it/s]     30%|##9       | 1219/4096 [00:02<00:07, 390.82it/s]     31%|###1      | 1270/4096 [00:02<00:06, 412.59it/s]     33%|###2      | 1348/4096 [00:03<00:05, 491.54it/s]     34%|###4      | 1400/4096 [00:03<00:05, 451.62it/s]     35%|###5      | 1447/4096 [00:03<00:06, 417.29it/s]     37%|###6      | 1512/4096 [00:03<00:06, 410.91it/s]     39%|###9      | 1604/4096 [00:03<00:05, 434.73it/s]     41%|####      | 1667/4096 [00:03<00:06, 404.57it/s]     42%|####2     | 1729/4096 [00:03<00:05, 414.76it/s]     43%|####3     | 1780/4096 [00:04<00:05, 433.77it/s]     45%|####4     | 1825/4096 [00:04<00:05, 400.32it/s]     46%|####5     | 1869/4096 [00:04<00:05, 408.76it/s]     47%|####7     | 1928/4096 [00:04<00:04, 453.48it/s]     48%|####8     | 1975/4096 [00:04<00:04, 450.61it/s]     50%|####9     | 2034/4096 [00:04<00:05, 401.18it/s]     51%|#####1    | 2104/4096 [00:04<00:04, 472.77it/s]     53%|#####2    | 2155/4096 [00:04<00:04, 432.74it/s]     54%|#####3    | 2201/4096 [00:05<00:04, 430.91it/s]     55%|#####5    | 2254/4096 [00:05<00:04, 379.21it/s]     56%|#####6    | 2307/4096 [00:05<00:04, 411.13it/s]     58%|#####7    | 2358/4096 [00:05<00:04, 383.38it/s]     59%|#####8    | 2399/4096 [00:05<00:04, 366.01it/s]     60%|#####9    | 2447/4096 [00:05<00:04, 384.10it/s]     61%|######1   | 2502/4096 [00:05<00:03, 425.95it/s]     62%|######2   | 2547/4096 [00:05<00:03, 387.48it/s]     64%|######4   | 2623/4096 [00:06<00:03, 403.84it/s]     65%|######5   | 2674/4096 [00:06<00:03, 421.40it/s]     67%|######7   | 2761/4096 [00:06<00:03, 425.91it/s]     69%|######8   | 2817/4096 [00:06<00:02, 455.18it/s]     70%|######9   | 2864/4096 [00:06<00:02, 439.37it/s]     71%|#######1  | 2913/4096 [00:06<00:03, 391.09it/s]     73%|#######2  | 2984/4096 [00:06<00:02, 426.51it/s]     74%|#######4  | 3033/4096 [00:07<00:02, 410.78it/s]     77%|#######7  | 3164/4096 [00:07<00:02, 451.79it/s]     79%|#######9  | 3245/4096 [00:07<00:01, 463.59it/s]     80%|########  | 3291/4096 [00:07<00:01, 440.93it/s]     82%|########1 | 3357/4096 [00:07<00:01, 478.43it/s]     84%|########3 | 3423/4096 [00:07<00:01, 454.21it/s]     85%|########5 | 3491/4096 [00:08<00:01, 504.51it/s]     87%|########6 | 3544/4096 [00:08<00:01, 441.85it/s]     88%|########7 | 3591/4096 [00:08<00:01, 440.73it/s]     89%|########8 | 3637/4096 [00:08<00:01, 422.36it/s]     90%|########9 | 3681/4096 [00:08<00:01, 414.36it/s]     91%|#########1| 3730/4096 [00:08<00:00, 399.98it/s]     92%|#########2| 3771/4096 [00:08<00:00, 366.17it/s]     94%|#########3| 3836/4096 [00:08<00:00, 392.23it/s]     95%|#########4| 3891/4096 [00:09<00:00, 429.57it/s]     96%|#########6| 3944/4096 [00:09<00:00, 420.66it/s]     97%|#########7| 3992/4096 [00:09<00:00, 406.11it/s]     99%|#########8| 4035/4096 [00:09<00:00, 392.96it/s]    100%|#########9| 4084/4096 [00:09<00:00, 413.65it/s]    100%|##########| 4096/4096 [00:09<00:00, 428.73it/s]




.. GENERATED FROM PYTHON SOURCE LINES 156-159

Filter Coefficients
----------------------------------------


.. GENERATED FROM PYTHON SOURCE LINES 159-273

.. code-block:: default

    K1 = 1 << 8
    K2 = K1
    eta2 = (
        np.linalg.norm(
            analog_system_sc.transfer_function_matrix(np.array([2 * np.pi / T / OSR]))
        ).flatten()
        ** 2
    )

    # prepending an anti-aliasing filter
    # omega_3dB = 2 * np.pi / T / 16
    # wp = omega_3dB / 2.0
    # ws = omega_3dB
    # gpass = 1.0
    # gstop = 60
    # filter = cbadc.analog_system.IIRDesign(wp, ws, gpass, gstop, ftype="ellip")

    # Post-filtering FIR filter
    fir_filter_numtaps = K1 + K2
    f_cutoff = 1.0 / OSR * 2
    fir_filter = scipy.signal.firwin(fir_filter_numtaps, f_cutoff)


    digital_estimator_sc = cbadc.digital_estimator.FIRFilter(
        # cbadc.analog_system.chain([filter, analog_system_sc]),
        analog_system_sc,
        digital_control_sc,
        eta2,
        K1,
        K2,
    )

    # Apply FIR filter
    digital_estimator_sc.convolve(fir_filter)

    digital_estimator_ref = cbadc.digital_estimator.FIRFilter(
        # cbadc.analog_system.chain([filter, analog_system_ref]),
        analog_system_ref,
        digital_control_ref,
        eta2,
        K1,
        K2,
    )

    # Apply FIR filter
    digital_estimator_ref.convolve(fir_filter)

    plt.figure()
    plt.semilogy(
        np.arange(-K1, K2),
        np.linalg.norm(np.array(digital_estimator_sc.h[0, :, :]), axis=1)[:],
        label="Switched Capacitor Filter",
    )
    plt.semilogy(
        np.arange(-K1, K2),
        np.linalg.norm(np.array(digital_estimator_ref.h[0, :, :]), axis=1)[:],
        label="Ref Filter",
    )

    plt.legend()
    plt.xlabel("filter tap k")
    plt.ylabel("$|| \mathbf{h} [k]||_2$")
    plt.xlim((-K1, K2))
    # plt.ylim((1e-16, 1))
    plt.grid(which="both")

    # Logspace frequencies
    frequencies = np.logspace(-3, 0, 100)
    omega = 4 * np.pi * beta * frequencies

    plt.figure()
    plt.semilogx(
        omega / (2 * np.pi),
        20
        * np.log10(np.abs(digital_estimator_sc.signal_transfer_function(omega))).flatten(),
        label="$STF(\omega)$ SC",
    )
    plt.semilogx(
        omega / (2 * np.pi),
        20
        * np.log10(np.abs(digital_estimator_ref.signal_transfer_function(omega))).flatten(),
        label="$STF(\omega)$ ref",
    )
    plt.semilogx(
        omega / (2 * np.pi),
        20
        * np.log10(
            np.linalg.norm(
                digital_estimator_sc.noise_transfer_function(omega)[:, 0, :], axis=0
            )
        ),
        "--",
        label="$ || NTF(\omega) ||_2 $ SC",
    )
    plt.semilogx(
        omega / (2 * np.pi),
        20
        * np.log10(
            np.linalg.norm(
                digital_estimator_ref.noise_transfer_function(omega)[:, 0, :], axis=0
            )
        ),
        "--",
        label="$ || NTF(\omega) ||_2 $ ref",
    )
    # Add labels and legends to figure
    plt.legend()
    plt.grid(which="both")
    plt.title("Signal and noise transfer functions")
    plt.xlabel("$f$ [Hz]")
    plt.ylabel("dB")
    # plt.xlim((1e2, 5e3))
    plt.gcf().tight_layout()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_005.png
         :alt: plot e switched capacitor digital control
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_006.png
         :alt: Signal and noise transfer functions
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_006.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 274-278

Mismatch Sensitivity to Switch Resistance
-----------------------------------------



.. GENERATED FROM PYTHON SOURCE LINES 278-351

.. code-block:: default


    mismatch_in_percent = np.arange(3) * 10

    size = 1 << 14
    t = np.arange(size) * T

    estimates = []

    for mismatch in mismatch_in_percent:
        digital_estimator_sc = cbadc.digital_estimator.FIRFilter(
            # cbadc.analog_system.chain([filter, analog_system_sc]),
            analog_system_sc,
            cbadc.digital_control.DigitalControl(
                cbadc.analog_signal.Clock(T),
                M,
                impulse_response=cbadc.analog_signal.RCImpulseResponse(R_s * C_Gamma),
            ),
            eta2,
            K1,
            K2,
        )

        # Apply FIR filter
        digital_estimator_sc.convolve(fir_filter)

        digital_estimator_sc(
            cbadc.simulator.get_simulator(
                cbadc.analog_system.AnalogSystem(
                    A,
                    B,
                    CT,
                    1 / ((1 + mismatch / 100) * R_s * C_x) * np.eye(M),
                    Gamma_tildeT,
                ),
                cbadc.digital_control.DigitalControl(
                    cbadc.analog_signal.Clock(T),
                    M,
                    impulse_response=cbadc.analog_signal.RCImpulseResponse(
                        (1 + mismatch / 100) * R_s * C_Gamma
                    ),
                ),
                [analog_signal],
                simulator_type=cbadc.simulator.SimulatorType.analytical,
            )
        )
        u_hat = np.zeros(size)
        for index in cbadc.utilities.show_status(range(size)):
            u_hat[index] = next(digital_estimator_sc)
        estimates.append(u_hat)

    # Plot estimates in time domain
    plt.figure()
    plt.title("Estimates")
    for index, mismatch in enumerate(mismatch_in_percent):
        plt.plot(t / T, estimates[index], label=f"Mismatch R_s {mismatch}%")
    plt.grid(visible=True, which="major", color="gray", alpha=0.6, lw=1.5)
    plt.xlabel("$t/T$")
    plt.xlim((K1 + K2, K1 + K2 + 100))
    plt.legend()

    # Plot estimates PSD
    plt.figure()
    plt.title("Estimates PSD")
    for index, mismatch in enumerate(mismatch_in_percent):
        f, psd = cbadc.utilities.compute_power_spectral_density(
            estimates[index][K1 + K2 :], fs=1.0 / T
        )
        plt.semilogx(f, 10 * np.log10(psd), label=f"Mismatch R_s {mismatch}%")
    plt.grid(visible=True, which="major", color="gray", alpha=0.6, lw=1.5)
    plt.xlabel("f [Hz]")
    plt.ylabel("V^2/Hz [dB]")
    plt.legend()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_007.png
         :alt: Estimates
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_007.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_008.png
         :alt: Estimates PSD
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_008.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          | 0/16384 [00:00<?, ?it/s]      3%|3         | 532/16384 [00:00<00:02, 5317.01it/s]      7%|6         | 1072/16384 [00:00<00:02, 5360.27it/s]     10%|9         | 1618/16384 [00:00<00:02, 5401.31it/s]     13%|#3        | 2159/16384 [00:00<00:02, 5395.01it/s]     16%|#6        | 2699/16384 [00:00<00:02, 5355.14it/s]     20%|#9        | 3235/16384 [00:00<00:02, 5351.36it/s]     23%|##3       | 3771/16384 [00:00<00:02, 5340.46it/s]     26%|##6       | 4313/16384 [00:00<00:02, 5365.10it/s]     30%|##9       | 4850/16384 [00:00<00:02, 5339.46it/s]     33%|###2      | 5391/16384 [00:01<00:02, 5358.77it/s]     36%|###6      | 5928/16384 [00:01<00:01, 5361.64it/s]     39%|###9      | 6465/16384 [00:01<00:01, 5339.82it/s]     43%|####2     | 7004/16384 [00:01<00:01, 5352.33it/s]     46%|####6     | 7541/16384 [00:01<00:01, 5356.06it/s]     49%|####9     | 8077/16384 [00:01<00:01, 5314.18it/s]     53%|#####2    | 8609/16384 [00:01<00:01, 5303.26it/s]     56%|#####5    | 9140/16384 [00:01<00:01, 5272.86it/s]     59%|#####9    | 9673/16384 [00:01<00:01, 5288.22it/s]     62%|######2   | 10202/16384 [00:01<00:01, 5279.09it/s]     66%|######5   | 10732/16384 [00:02<00:01, 5283.93it/s]     69%|######8   | 11261/16384 [00:02<00:00, 5285.54it/s]     72%|#######2  | 11798/16384 [00:02<00:00, 5308.88it/s]     75%|#######5  | 12336/16384 [00:02<00:00, 5329.52it/s]     79%|#######8  | 12869/16384 [00:02<00:00, 5322.30it/s]     82%|########1 | 13414/16384 [00:02<00:00, 5357.69it/s]     85%|########5 | 13957/16384 [00:02<00:00, 5378.30it/s]     88%|########8 | 14495/16384 [00:02<00:00, 5322.90it/s]     92%|#########1| 15034/16384 [00:02<00:00, 5341.53it/s]     95%|#########5| 15570/16384 [00:02<00:00, 5345.20it/s]     98%|#########8| 16105/16384 [00:03<00:00, 5335.17it/s]    100%|##########| 16384/16384 [00:03<00:00, 5330.18it/s]
      0%|          | 0/16384 [00:00<?, ?it/s]      3%|3         | 522/16384 [00:00<00:03, 5217.96it/s]      6%|6         | 1051/16384 [00:00<00:02, 5254.74it/s]     10%|9         | 1585/16384 [00:00<00:02, 5293.36it/s]     13%|#2        | 2116/16384 [00:00<00:02, 5298.77it/s]     16%|#6        | 2649/16384 [00:00<00:02, 5309.87it/s]     19%|#9        | 3187/16384 [00:00<00:02, 5331.24it/s]     23%|##2       | 3730/16384 [00:00<00:02, 5362.29it/s]     26%|##6       | 4274/16384 [00:00<00:02, 5385.85it/s]     29%|##9       | 4822/16384 [00:00<00:02, 5413.75it/s]     33%|###2      | 5373/16384 [00:01<00:02, 5440.94it/s]     36%|###6      | 5919/16384 [00:01<00:01, 5444.86it/s]     39%|###9      | 6468/16384 [00:01<00:01, 5457.27it/s]     43%|####2     | 7016/16384 [00:01<00:01, 5461.79it/s]     46%|####6     | 7563/16384 [00:01<00:01, 5454.59it/s]     50%|####9     | 8116/16384 [00:01<00:01, 5476.37it/s]     53%|#####2    | 8666/16384 [00:01<00:01, 5482.15it/s]     56%|#####6    | 9215/16384 [00:01<00:01, 5462.10it/s]     60%|#####9    | 9762/16384 [00:01<00:01, 5394.16it/s]     63%|######2   | 10302/16384 [00:01<00:01, 5382.52it/s]     66%|######6   | 10841/16384 [00:02<00:01, 5358.40it/s]     69%|######9   | 11377/16384 [00:02<00:00, 5340.60it/s]     73%|#######2  | 11912/16384 [00:02<00:00, 5325.30it/s]     76%|#######5  | 12445/16384 [00:02<00:00, 5300.96it/s]     79%|#######9  | 12982/16384 [00:02<00:00, 5320.89it/s]     83%|########2 | 13527/16384 [00:02<00:00, 5356.98it/s]     86%|########5 | 14065/16384 [00:02<00:00, 5362.06it/s]     89%|########9 | 14602/16384 [00:02<00:00, 5318.70it/s]     92%|#########2| 15134/16384 [00:02<00:00, 5290.39it/s]     96%|#########5| 15664/16384 [00:02<00:00, 5267.21it/s]     99%|#########8| 16191/16384 [00:03<00:00, 5265.24it/s]    100%|##########| 16384/16384 [00:03<00:00, 5357.04it/s]
      0%|          | 0/16384 [00:00<?, ?it/s]      3%|3         | 536/16384 [00:00<00:02, 5352.02it/s]      7%|6         | 1074/16384 [00:00<00:02, 5367.00it/s]     10%|9         | 1614/16384 [00:00<00:02, 5380.32it/s]     13%|#3        | 2153/16384 [00:00<00:02, 5347.48it/s]     16%|#6        | 2688/16384 [00:00<00:02, 5304.46it/s]     20%|#9        | 3225/16384 [00:00<00:02, 5325.27it/s]     23%|##2       | 3758/16384 [00:00<00:02, 5312.68it/s]     26%|##6       | 4290/16384 [00:00<00:02, 5261.97it/s]     29%|##9       | 4825/16384 [00:00<00:02, 5287.21it/s]     33%|###2      | 5359/16384 [00:01<00:02, 5302.18it/s]     36%|###5      | 5897/16384 [00:01<00:01, 5324.55it/s]     39%|###9      | 6437/16384 [00:01<00:01, 5344.85it/s]     43%|####2     | 6979/16384 [00:01<00:01, 5367.17it/s]     46%|####5     | 7517/16384 [00:01<00:01, 5368.21it/s]     49%|####9     | 8058/16384 [00:01<00:01, 5380.35it/s]     52%|#####2    | 8601/16384 [00:01<00:01, 5393.91it/s]     56%|#####5    | 9141/16384 [00:01<00:01, 5365.89it/s]     59%|#####9    | 9678/16384 [00:01<00:01, 5363.35it/s]     62%|######2   | 10217/16384 [00:01<00:01, 5370.46it/s]     66%|######5   | 10755/16384 [00:02<00:01, 5369.09it/s]     69%|######8   | 11293/16384 [00:02<00:00, 5371.52it/s]     72%|#######2  | 11831/16384 [00:02<00:00, 5354.91it/s]     75%|#######5  | 12367/16384 [00:02<00:00, 5348.67it/s]     79%|#######8  | 12902/16384 [00:02<00:00, 5320.74it/s]     82%|########2 | 13441/16384 [00:02<00:00, 5341.14it/s]     85%|########5 | 13985/16384 [00:02<00:00, 5369.09it/s]     89%|########8 | 14532/16384 [00:02<00:00, 5398.24it/s]     92%|#########1| 15073/16384 [00:02<00:00, 5399.21it/s]     95%|#########5| 15613/16384 [00:02<00:00, 5325.87it/s]     99%|#########8| 16146/16384 [00:03<00:00, 5276.56it/s]    100%|##########| 16384/16384 [00:03<00:00, 5338.34it/s]

    <matplotlib.legend.Legend object at 0x2928472e0>



.. GENERATED FROM PYTHON SOURCE LINES 352-355

Clock Jitter Sensitivity
------------------------


.. GENERATED FROM PYTHON SOURCE LINES 355-483

.. code-block:: default

    jitter_std = np.power(10.0, np.arange(-6, 0)) * T
    # jitter_std = np.arange(3) * T * 0.3
    clock_jitter = [lambda: (np.random.random() - 0.5) * std for std in jitter_std]

    size = 1 << 14
    t = np.arange(size) * T

    estimates = []
    estimates_ref = []

    for jitter in clock_jitter:
        digital_estimator_sc = cbadc.digital_estimator.FIRFilter(
            # cbadc.analog_system.chain([filter, analog_system_sc]),
            analog_system_sc,
            cbadc.digital_control.DigitalControl(
                cbadc.analog_signal.Clock(T),
                M,
                impulse_response=cbadc.analog_signal.RCImpulseResponse(R_s * C_Gamma),
            ),
            eta2,
            K1,
            K2,
            solver_type=cbadc.digital_estimator.FilterComputationBackend.mpmath,
        )

        # Apply FIR filter
        # digital_estimator_sc.convolve(fir_filter)

        digital_estimator_sc(
            cbadc.simulator.get_simulator(
                analog_system_sc,
                cbadc.digital_control.DigitalControl(
                    cbadc.analog_signal.Clock(T),
                    M,
                    impulse_response=cbadc.analog_signal.RCImpulseResponse(R_s * C_Gamma),
                ),
                [analog_signal],
                simulator_type=cbadc.simulator.SimulatorType.analytical,
            )
        )

        digital_estimator_ref = cbadc.digital_estimator.FIRFilter(
            # cbadc.analog_system.chain([filter, analog_system_ref]),
            analog_system_ref,
            cbadc.digital_control.DigitalControl(cbadc.analog_signal.Clock(T), M),
            eta2,
            K1,
            K2,
            solver_type=cbadc.digital_estimator.FilterComputationBackend.mpmath,
        )

        # Apply FIR filter
        # digital_estimator_ref.convolve(fir_filter)

        digital_estimator_ref(
            cbadc.simulator.get_simulator(
                analog_system_ref,
                cbadc.digital_control.DigitalControl(cbadc.analog_signal.Clock(T), M),
                [analog_signal],
                simulator_type=cbadc.simulator.SimulatorType.analytical,
            )
        )

        u_hat = np.zeros(size)
        u_hat_ref = np.zeros_like(u_hat)
        digital_estimator_sc.warm_up()
        digital_estimator_ref.warm_up()
        for index in cbadc.utilities.show_status(range(size)):
            u_hat[index] = next(digital_estimator_sc)
            u_hat_ref[index] = next(digital_estimator_ref)
        estimates.append(u_hat)
        estimates_ref.append(u_hat_ref)

    # Plot estimates in time domain
    plt.figure()
    plt.title("Estimates")
    for index, jitter in enumerate(clock_jitter):
        plt.plot(
            t / T,
            estimates[index],
            label=f"Std / T = {np.round(jitter_std[index] / T * 100, 3)}%",
        )
    plt.grid(visible=True, which="major", color="gray", alpha=0.6, lw=1.5)
    plt.xlabel("$t/T$")
    plt.xlim((K1 + K2, K1 + K2 + 1000))
    plt.legend()

    # Plot estimates in time domain
    plt.figure()
    plt.title("Ref Estimates")
    for index, jitter in enumerate(clock_jitter):
        plt.plot(
            t / T,
            estimates_ref[index],
            label=f"Ref Std / T = {np.round(jitter_std[index] / T * 100, 3)}%",
        )
    plt.grid(visible=True, which="major", color="gray", alpha=0.6, lw=1.5)
    plt.xlabel("$t/T$")
    plt.xlim((K1 + K2, K1 + K2 + 1000))
    plt.legend()


    # Plot estimates PSD
    for index, jitter in enumerate(clock_jitter):
        plt.figure()
        plt.title("Estimates PSD Clock Jitter")

        f, psd = cbadc.utilities.compute_power_spectral_density(
            estimates[index][K1 + K2 :], fs=1.0 / T
        )
        f_ref, psd_ref = cbadc.utilities.compute_power_spectral_density(
            estimates_ref[index][K1 + K2 :], fs=1.0 / T
        )
        plt.semilogx(
            f,
            10 * np.log10(psd),
            label=f"SC (Std/T) = +- {np.round(jitter_std[index] / T * 100, 3)}%",
        )
        plt.semilogx(
            f_ref,
            10 * np.log10(psd_ref),
            "--",
            label=f"Ref (Std/T) = +- {np.round(jitter_std[index] / T  * 100, 3)}%",
        )
        plt.grid(visible=True, which="major", color="gray", alpha=0.6, lw=1.5)
        plt.xlabel("f [Hz]")
        plt.ylabel("V^2/Hz [dB]")
        plt.legend()



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_009.png
         :alt: Estimates
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_009.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_010.png
         :alt: Ref Estimates
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_010.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_011.png
         :alt: Estimates PSD Clock Jitter
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_011.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_012.png
         :alt: Estimates PSD Clock Jitter
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_012.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_013.png
         :alt: Estimates PSD Clock Jitter
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_013.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_014.png
         :alt: Estimates PSD Clock Jitter
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_014.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_015.png
         :alt: Estimates PSD Clock Jitter
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_015.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_016.png
         :alt: Estimates PSD Clock Jitter
         :srcset: /tutorials/b_general/images/sphx_glr_plot_e_switched_capacitor_digital_control_016.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          | 0/16384 [00:00<?, ?it/s]      1%|          | 152/16384 [00:00<00:10, 1513.66it/s]      2%|2         | 346/16384 [00:00<00:09, 1761.70it/s]      4%|3         | 610/16384 [00:00<00:07, 2159.27it/s]      5%|5         | 843/16384 [00:00<00:08, 1764.87it/s]      6%|6         | 1029/16384 [00:00<00:08, 1707.47it/s]      7%|7         | 1206/16384 [00:00<00:10, 1427.45it/s]      8%|8         | 1358/16384 [00:00<00:11, 1324.83it/s]      9%|9         | 1502/16384 [00:00<00:11, 1343.64it/s]     10%|#         | 1641/16384 [00:01<00:11, 1297.77it/s]     11%|#1        | 1832/16384 [00:01<00:09, 1459.08it/s]     12%|#2        | 1983/16384 [00:01<00:10, 1374.93it/s]     13%|#2        | 2125/16384 [00:01<00:10, 1301.69it/s]     14%|#3        | 2258/16384 [00:01<00:10, 1284.44it/s]     15%|#4        | 2418/16384 [00:01<00:10, 1369.58it/s]     16%|#5        | 2558/16384 [00:01<00:10, 1317.27it/s]     17%|#6        | 2721/16384 [00:01<00:09, 1403.14it/s]     18%|#7        | 2916/16384 [00:01<00:08, 1557.18it/s]     19%|#9        | 3179/16384 [00:02<00:07, 1864.95it/s]     21%|##        | 3369/16384 [00:02<00:09, 1371.48it/s]     22%|##1       | 3580/16384 [00:02<00:08, 1493.95it/s]     23%|##2       | 3746/16384 [00:02<00:08, 1512.94it/s]     24%|##3       | 3910/16384 [00:02<00:08, 1495.91it/s]     25%|##4       | 4068/16384 [00:02<00:09, 1362.16it/s]     26%|##5       | 4226/16384 [00:02<00:08, 1412.37it/s]     27%|##6       | 4374/16384 [00:03<00:09, 1232.24it/s]     27%|##7       | 4505/16384 [00:03<00:10, 1162.09it/s]     28%|##8       | 4627/16384 [00:03<00:10, 1173.52it/s]     29%|##9       | 4784/16384 [00:03<00:09, 1235.67it/s]     30%|###       | 4923/16384 [00:03<00:08, 1275.75it/s]     31%|###       | 5054/16384 [00:03<00:08, 1265.52it/s]     32%|###1      | 5183/16384 [00:03<00:08, 1254.56it/s]     32%|###2      | 5314/16384 [00:03<00:08, 1269.60it/s]     33%|###3      | 5463/16384 [00:03<00:08, 1332.15it/s]     34%|###4      | 5623/16384 [00:04<00:07, 1408.66it/s]     35%|###5      | 5765/16384 [00:04<00:08, 1300.95it/s]     36%|###5      | 5898/16384 [00:04<00:08, 1258.64it/s]     37%|###6      | 6060/16384 [00:04<00:07, 1358.01it/s]     38%|###7      | 6217/16384 [00:04<00:07, 1417.22it/s]     39%|###8      | 6361/16384 [00:04<00:07, 1384.20it/s]     40%|####      | 6624/16384 [00:04<00:05, 1739.41it/s]     42%|####1     | 6803/16384 [00:04<00:05, 1696.44it/s]     43%|####2     | 6975/16384 [00:04<00:05, 1602.79it/s]     44%|####3     | 7138/16384 [00:05<00:06, 1538.23it/s]     45%|####4     | 7294/16384 [00:05<00:06, 1476.29it/s]     46%|####5     | 7533/16384 [00:05<00:05, 1647.08it/s]     47%|####6     | 7699/16384 [00:05<00:05, 1509.87it/s]     48%|####7     | 7852/16384 [00:05<00:05, 1475.52it/s]     49%|####8     | 8001/16384 [00:05<00:05, 1446.14it/s]     50%|####9     | 8147/16384 [00:05<00:06, 1366.32it/s]     51%|#####     | 8285/16384 [00:05<00:06, 1296.14it/s]     51%|#####1    | 8434/16384 [00:05<00:05, 1338.07it/s]     52%|#####2    | 8583/16384 [00:06<00:05, 1356.39it/s]     53%|#####3    | 8725/16384 [00:06<00:05, 1373.91it/s]     54%|#####4    | 8875/16384 [00:06<00:05, 1409.32it/s]     55%|#####5    | 9017/16384 [00:06<00:05, 1411.90it/s]     56%|#####5    | 9159/16384 [00:06<00:05, 1362.80it/s]     57%|#####6    | 9305/16384 [00:06<00:05, 1363.27it/s]     58%|#####7    | 9442/16384 [00:06<00:05, 1223.36it/s]     58%|#####8    | 9567/16384 [00:06<00:06, 1125.37it/s]     59%|#####9    | 9707/16384 [00:06<00:05, 1189.33it/s]     60%|#####9    | 9829/16384 [00:07<00:05, 1145.39it/s]     61%|######    | 9946/16384 [00:07<00:05, 1117.57it/s]     61%|######1   | 10061/16384 [00:07<00:05, 1125.78it/s]     62%|######2   | 10175/16384 [00:07<00:05, 1060.85it/s]     63%|######2   | 10283/16384 [00:07<00:06, 1001.51it/s]     64%|######3   | 10454/16384 [00:07<00:04, 1190.70it/s]     65%|######4   | 10613/16384 [00:07<00:04, 1301.15it/s]     66%|######5   | 10747/16384 [00:07<00:04, 1224.64it/s]     66%|######6   | 10886/16384 [00:07<00:04, 1269.42it/s]     67%|######7   | 11040/16384 [00:08<00:03, 1339.70it/s]     68%|######8   | 11177/16384 [00:08<00:03, 1333.43it/s]     69%|######9   | 11380/16384 [00:08<00:03, 1457.77it/s]     70%|#######   | 11526/16384 [00:08<00:03, 1233.07it/s]     71%|#######1  | 11669/16384 [00:08<00:03, 1282.18it/s]     72%|#######2  | 11802/16384 [00:08<00:03, 1172.75it/s]     73%|#######2  | 11924/16384 [00:08<00:03, 1131.20it/s]     74%|#######3  | 12058/16384 [00:08<00:03, 1158.04it/s]     74%|#######4  | 12177/16384 [00:09<00:03, 1130.27it/s]     75%|#######5  | 12292/16384 [00:09<00:03, 1096.46it/s]     76%|#######5  | 12439/16384 [00:09<00:03, 1193.81it/s]     77%|#######7  | 12654/16384 [00:09<00:02, 1365.15it/s]     78%|#######8  | 12833/16384 [00:09<00:02, 1479.64it/s]     80%|#######9  | 13043/16384 [00:09<00:02, 1603.61it/s]     81%|########  | 13205/16384 [00:09<00:02, 1435.76it/s]     82%|########1 | 13375/16384 [00:09<00:02, 1501.97it/s]     83%|########3 | 13619/16384 [00:09<00:01, 1756.68it/s]     84%|########4 | 13800/16384 [00:10<00:01, 1515.65it/s]     86%|########5 | 14045/16384 [00:10<00:01, 1716.62it/s]     87%|########6 | 14225/16384 [00:10<00:01, 1617.82it/s]     88%|########8 | 14471/16384 [00:10<00:01, 1663.42it/s]     89%|########9 | 14642/16384 [00:10<00:01, 1540.45it/s]     91%|######### | 14905/16384 [00:10<00:00, 1809.06it/s]     92%|#########2| 15094/16384 [00:10<00:00, 1779.34it/s]     93%|#########3| 15278/16384 [00:10<00:00, 1653.05it/s]     95%|#########4| 15525/16384 [00:11<00:00, 1758.47it/s]     96%|#########5| 15716/16384 [00:11<00:00, 1796.72it/s]     97%|#########7| 15911/16384 [00:11<00:00, 1761.50it/s]     98%|#########8| 16090/16384 [00:11<00:00, 1590.17it/s]     99%|#########9| 16253/16384 [00:11<00:00, 1558.93it/s]    100%|##########| 16384/16384 [00:11<00:00, 1415.18it/s]
      0%|          | 0/16384 [00:00<?, ?it/s]      2%|1         | 254/16384 [00:00<00:06, 2531.39it/s]      3%|3         | 520/16384 [00:00<00:06, 2602.86it/s]      5%|4         | 781/16384 [00:00<00:06, 2572.88it/s]      6%|6         | 1039/16384 [00:00<00:05, 2562.30it/s]      8%|7         | 1305/16384 [00:00<00:05, 2596.60it/s]     10%|9         | 1565/16384 [00:00<00:05, 2596.12it/s]     11%|#1        | 1825/16384 [00:00<00:05, 2580.72it/s]     13%|#2        | 2090/16384 [00:00<00:05, 2602.19it/s]     14%|#4        | 2352/16384 [00:00<00:05, 2607.28it/s]     16%|#5        | 2615/16384 [00:01<00:05, 2612.37it/s]     18%|#7        | 2880/16384 [00:01<00:05, 2623.49it/s]     19%|#9        | 3143/16384 [00:01<00:05, 2607.77it/s]     21%|##        | 3404/16384 [00:01<00:05, 2579.61it/s]     22%|##2       | 3663/16384 [00:01<00:04, 2573.23it/s]     24%|##3       | 3921/16384 [00:01<00:04, 2574.33it/s]     26%|##5       | 4179/16384 [00:01<00:04, 2569.69it/s]     27%|##7       | 4440/16384 [00:01<00:04, 2579.05it/s]     29%|##8       | 4706/16384 [00:01<00:04, 2601.71it/s]     30%|###       | 4967/16384 [00:01<00:04, 2597.48it/s]     32%|###1      | 5233/16384 [00:02<00:04, 2614.42it/s]     34%|###3      | 5497/16384 [00:02<00:04, 2621.64it/s]     35%|###5      | 5760/16384 [00:02<00:04, 2617.15it/s]     37%|###6      | 6022/16384 [00:02<00:03, 2599.90it/s]     38%|###8      | 6283/16384 [00:02<00:03, 2588.67it/s]     40%|###9      | 6544/16384 [00:02<00:03, 2594.02it/s]     42%|####1     | 6809/16384 [00:02<00:03, 2608.58it/s]     43%|####3     | 7076/16384 [00:02<00:03, 2626.77it/s]     45%|####4     | 7343/16384 [00:02<00:03, 2639.53it/s]     46%|####6     | 7607/16384 [00:02<00:03, 2620.50it/s]     48%|####8     | 7870/16384 [00:03<00:03, 2602.37it/s]     50%|####9     | 8136/16384 [00:03<00:03, 2617.34it/s]     51%|#####1    | 8398/16384 [00:03<00:03, 2609.54it/s]     53%|#####2    | 8665/16384 [00:03<00:02, 2626.22it/s]     54%|#####4    | 8929/16384 [00:03<00:02, 2627.54it/s]     56%|#####6    | 9196/16384 [00:03<00:02, 2638.91it/s]     58%|#####7    | 9465/16384 [00:03<00:02, 2651.84it/s]     59%|#####9    | 9732/16384 [00:03<00:02, 2654.50it/s]     61%|######1   | 9998/16384 [00:03<00:02, 2649.56it/s]     63%|######2   | 10263/16384 [00:03<00:02, 2641.85it/s]     64%|######4   | 10528/16384 [00:04<00:02, 2639.52it/s]     66%|######5   | 10795/16384 [00:04<00:02, 2645.77it/s]     68%|######7   | 11063/16384 [00:04<00:02, 2652.86it/s]     69%|######9   | 11329/16384 [00:04<00:01, 2641.21it/s]     71%|#######   | 11597/16384 [00:04<00:01, 2652.54it/s]     72%|#######2  | 11866/16384 [00:04<00:01, 2660.84it/s]     74%|#######4  | 12135/16384 [00:04<00:01, 2667.18it/s]     76%|#######5  | 12402/16384 [00:04<00:01, 2667.67it/s]     77%|#######7  | 12669/16384 [00:04<00:01, 2666.36it/s]     79%|#######8  | 12936/16384 [00:04<00:01, 2663.03it/s]     81%|########  | 13205/16384 [00:05<00:01, 2668.38it/s]     82%|########2 | 13473/16384 [00:05<00:01, 2669.00it/s]     84%|########3 | 13742/16384 [00:05<00:00, 2673.43it/s]     86%|########5 | 14010/16384 [00:05<00:00, 2662.44it/s]     87%|########7 | 14277/16384 [00:05<00:00, 2640.29it/s]     89%|########8 | 14542/16384 [00:05<00:00, 2605.47it/s]     90%|######### | 14803/16384 [00:05<00:00, 2583.58it/s]     92%|#########1| 15062/16384 [00:05<00:00, 2559.10it/s]     93%|#########3| 15318/16384 [00:05<00:00, 2538.14it/s]     95%|#########5| 15572/16384 [00:05<00:00, 2523.73it/s]     97%|#########6| 15838/16384 [00:06<00:00, 2562.68it/s]     98%|#########8| 16099/16384 [00:06<00:00, 2574.31it/s]    100%|#########9| 16360/16384 [00:06<00:00, 2584.22it/s]    100%|##########| 16384/16384 [00:06<00:00, 2613.28it/s]
      0%|          | 0/16384 [00:00<?, ?it/s]      1%|1         | 225/16384 [00:00<00:07, 2242.71it/s]      3%|2         | 474/16384 [00:00<00:06, 2385.74it/s]      4%|4         | 720/16384 [00:00<00:06, 2416.66it/s]      6%|5         | 962/16384 [00:00<00:06, 2267.55it/s]      7%|7         | 1193/16384 [00:00<00:06, 2280.76it/s]      9%|8         | 1447/16384 [00:00<00:06, 2366.02it/s]     10%|#         | 1704/16384 [00:00<00:06, 2430.79it/s]     12%|#1        | 1956/16384 [00:00<00:05, 2458.22it/s]     13%|#3        | 2203/16384 [00:00<00:05, 2434.04it/s]     15%|#4        | 2447/16384 [00:01<00:05, 2387.17it/s]     16%|#6        | 2687/16384 [00:01<00:05, 2364.84it/s]     18%|#7        | 2933/16384 [00:01<00:05, 2391.18it/s]     19%|#9        | 3176/16384 [00:01<00:05, 2401.09it/s]     21%|##        | 3417/16384 [00:01<00:05, 2368.89it/s]     22%|##2       | 3659/16384 [00:01<00:05, 2383.82it/s]     24%|##3       | 3911/16384 [00:01<00:05, 2422.97it/s]     25%|##5       | 4156/16384 [00:01<00:05, 2430.33it/s]     27%|##6       | 4400/16384 [00:01<00:04, 2423.07it/s]     28%|##8       | 4652/16384 [00:01<00:04, 2451.28it/s]     30%|##9       | 4898/16384 [00:02<00:04, 2404.89it/s]     31%|###1      | 5153/16384 [00:02<00:04, 2447.36it/s]     33%|###3      | 5408/16384 [00:02<00:04, 2477.58it/s]     35%|###4      | 5656/16384 [00:02<00:04, 2453.96it/s]     36%|###6      | 5903/16384 [00:02<00:04, 2456.33it/s]     38%|###7      | 6149/16384 [00:02<00:04, 2449.10it/s]     39%|###9      | 6394/16384 [00:02<00:04, 2431.02it/s]     41%|####      | 6638/16384 [00:02<00:04, 2407.52it/s]     42%|####1     | 6879/16384 [00:02<00:03, 2401.17it/s]     44%|####3     | 7132/16384 [00:02<00:03, 2439.27it/s]     45%|####5     | 7377/16384 [00:03<00:03, 2419.87it/s]     47%|####6     | 7620/16384 [00:03<00:03, 2372.18it/s]     48%|####7     | 7858/16384 [00:03<00:03, 2362.25it/s]     49%|####9     | 8098/16384 [00:03<00:03, 2373.08it/s]     51%|#####     | 8349/16384 [00:03<00:03, 2412.34it/s]     52%|#####2    | 8601/16384 [00:03<00:03, 2442.44it/s]     54%|#####4    | 8859/16384 [00:03<00:03, 2481.82it/s]     56%|#####5    | 9119/16384 [00:03<00:02, 2516.34it/s]     57%|#####7    | 9378/16384 [00:03<00:02, 2536.87it/s]     59%|#####8    | 9637/16384 [00:03<00:02, 2552.35it/s]     60%|######    | 9893/16384 [00:04<00:02, 2534.30it/s]     62%|######1   | 10150/16384 [00:04<00:02, 2542.45it/s]     64%|######3   | 10408/16384 [00:04<00:02, 2553.10it/s]     65%|######5   | 10668/16384 [00:04<00:02, 2564.54it/s]     67%|######6   | 10925/16384 [00:04<00:02, 2556.17it/s]     68%|######8   | 11181/16384 [00:04<00:02, 2369.65it/s]     70%|######9   | 11437/16384 [00:04<00:02, 2421.92it/s]     71%|#######1  | 11697/16384 [00:04<00:01, 2470.58it/s]     73%|#######2  | 11956/16384 [00:04<00:01, 2503.74it/s]     75%|#######4  | 12216/16384 [00:05<00:01, 2531.53it/s]     76%|#######6  | 12474/16384 [00:05<00:01, 2544.95it/s]     78%|#######7  | 12735/16384 [00:05<00:01, 2563.05it/s]     79%|#######9  | 12995/16384 [00:05<00:01, 2571.27it/s]     81%|########  | 13255/16384 [00:05<00:01, 2578.35it/s]     82%|########2 | 13515/16384 [00:05<00:01, 2583.73it/s]     84%|########4 | 13776/16384 [00:05<00:01, 2590.23it/s]     86%|########5 | 14036/16384 [00:05<00:00, 2592.33it/s]     87%|########7 | 14296/16384 [00:05<00:00, 2594.33it/s]     89%|########8 | 14557/16384 [00:05<00:00, 2596.87it/s]     90%|######### | 14817/16384 [00:06<00:00, 2596.04it/s]     92%|#########2| 15077/16384 [00:06<00:00, 2554.70it/s]     94%|#########3| 15333/16384 [00:06<00:00, 2475.21it/s]     95%|#########5| 15583/16384 [00:06<00:00, 2480.21it/s]     97%|#########6| 15835/16384 [00:06<00:00, 2490.44it/s]     98%|#########8| 16092/16384 [00:06<00:00, 2512.66it/s]    100%|#########9| 16348/16384 [00:06<00:00, 2525.25it/s]    100%|##########| 16384/16384 [00:06<00:00, 2467.88it/s]
      0%|          | 0/16384 [00:00<?, ?it/s]      0%|          | 65/16384 [00:00<00:27, 596.95it/s]      1%|          | 125/16384 [00:00<00:31, 521.54it/s]      1%|1         | 178/16384 [00:00<00:32, 494.77it/s]      1%|1         | 228/16384 [00:00<00:39, 404.05it/s]      2%|1         | 286/16384 [00:00<00:37, 428.49it/s]      2%|2         | 331/16384 [00:00<00:40, 399.60it/s]      2%|2         | 398/16384 [00:00<00:33, 472.52it/s]      3%|3         | 524/16384 [00:00<00:24, 639.71it/s]      4%|3         | 589/16384 [00:01<00:31, 504.19it/s]      4%|4         | 676/16384 [00:01<00:27, 574.61it/s]      5%|4         | 738/16384 [00:01<00:32, 485.74it/s]      5%|4         | 800/16384 [00:01<00:31, 490.35it/s]      5%|5         | 853/16384 [00:01<00:32, 478.27it/s]      6%|5         | 924/16384 [00:01<00:30, 510.50it/s]      6%|6         | 990/16384 [00:01<00:28, 547.23it/s]      6%|6         | 1047/16384 [00:02<00:29, 514.28it/s]      7%|7         | 1169/16384 [00:02<00:22, 690.01it/s]      8%|7         | 1242/16384 [00:02<00:30, 497.98it/s]      8%|7         | 1302/16384 [00:02<00:35, 427.46it/s]      8%|8         | 1365/16384 [00:02<00:32, 467.91it/s]      9%|8         | 1429/16384 [00:02<00:29, 505.95it/s]      9%|9         | 1487/16384 [00:02<00:31, 476.22it/s]      9%|9         | 1540/16384 [00:03<00:31, 471.29it/s]     10%|9         | 1591/16384 [00:03<00:31, 467.40it/s]     10%|#         | 1652/16384 [00:03<00:29, 496.98it/s]     10%|#         | 1704/16384 [00:03<00:30, 485.17it/s]     11%|#         | 1763/16384 [00:03<00:33, 441.03it/s]     11%|#1        | 1839/16384 [00:03<00:29, 492.64it/s]     12%|#1        | 1898/16384 [00:03<00:31, 459.11it/s]     12%|#1        | 1946/16384 [00:03<00:32, 450.24it/s]     12%|#2        | 2019/16384 [00:04<00:27, 519.87it/s]     13%|#2        | 2082/16384 [00:04<00:28, 501.74it/s]     14%|#4        | 2341/16384 [00:04<00:13, 1036.19it/s]     15%|#4        | 2455/16384 [00:04<00:21, 639.95it/s]      16%|#5        | 2545/16384 [00:04<00:21, 637.96it/s]     16%|#6        | 2659/16384 [00:04<00:20, 677.49it/s]     17%|#7        | 2821/16384 [00:05<00:15, 871.80it/s]     18%|#8        | 2997/16384 [00:05<00:16, 802.11it/s]     19%|#8        | 3092/16384 [00:05<00:21, 618.22it/s]     20%|#9        | 3236/16384 [00:05<00:17, 759.58it/s]     20%|##        | 3333/16384 [00:05<00:19, 657.45it/s]     21%|##        | 3415/16384 [00:06<00:20, 617.77it/s]     21%|##1       | 3488/16384 [00:06<00:24, 530.57it/s]     22%|##1       | 3550/16384 [00:06<00:25, 504.10it/s]     23%|##3       | 3779/16384 [00:06<00:15, 815.56it/s]     24%|##3       | 3873/16384 [00:06<00:21, 579.09it/s]     24%|##4       | 3948/16384 [00:06<00:22, 565.11it/s]     25%|##4       | 4016/16384 [00:07<00:23, 529.54it/s]     25%|##4       | 4077/16384 [00:07<00:22, 541.11it/s]     25%|##5       | 4137/16384 [00:07<00:23, 517.72it/s]     27%|##6       | 4345/16384 [00:07<00:14, 858.71it/s]     27%|##7       | 4444/16384 [00:07<00:20, 589.82it/s]     28%|##7       | 4523/16384 [00:07<00:19, 623.60it/s]     28%|##8       | 4602/16384 [00:08<00:20, 571.01it/s]     29%|##8       | 4671/16384 [00:08<00:20, 578.86it/s]     29%|##8       | 4738/16384 [00:08<00:23, 498.24it/s]     29%|##9       | 4795/16384 [00:08<00:23, 493.12it/s]     30%|##9       | 4853/16384 [00:08<00:22, 511.67it/s]     30%|##9       | 4909/16384 [00:08<00:22, 515.06it/s]     31%|###1      | 5095/16384 [00:08<00:15, 719.30it/s]     32%|###1      | 5165/16384 [00:09<00:18, 609.19it/s]     32%|###1      | 5227/16384 [00:09<00:18, 603.76it/s]     33%|###2      | 5399/16384 [00:09<00:12, 853.88it/s]     34%|###3      | 5490/16384 [00:09<00:18, 577.13it/s]     34%|###3      | 5563/16384 [00:09<00:19, 543.74it/s]     34%|###4      | 5628/16384 [00:09<00:21, 509.71it/s]     36%|###5      | 5826/16384 [00:10<00:16, 640.68it/s]     36%|###5      | 5893/16384 [00:10<00:17, 602.56it/s]     36%|###6      | 5954/16384 [00:10<00:18, 563.31it/s]     37%|###6      | 6013/16384 [00:10<00:19, 545.36it/s]     37%|###7      | 6075/16384 [00:10<00:19, 541.84it/s]     37%|###7      | 6129/16384 [00:10<00:19, 518.02it/s]     38%|###7      | 6191/16384 [00:10<00:19, 533.01it/s]     38%|###8      | 6245/16384 [00:10<00:19, 525.22it/s]     38%|###8      | 6298/16384 [00:11<00:20, 498.04it/s]     39%|###8      | 6367/16384 [00:11<00:18, 546.30it/s]     39%|###9      | 6465/16384 [00:11<00:14, 663.68it/s]     40%|###9      | 6533/16384 [00:11<00:18, 545.26it/s]     40%|####      | 6592/16384 [00:11<00:17, 552.88it/s]     41%|####1     | 6763/16384 [00:11<00:11, 824.24it/s]     42%|####1     | 6850/16384 [00:11<00:18, 525.66it/s]     42%|####2     | 6919/16384 [00:12<00:17, 553.01it/s]     43%|####2     | 6987/16384 [00:12<00:18, 520.66it/s]     43%|####3     | 7048/16384 [00:12<00:18, 506.77it/s]     43%|####3     | 7105/16384 [00:12<00:18, 496.17it/s]     44%|####3     | 7159/16384 [00:12<00:20, 456.03it/s]     44%|####3     | 7208/16384 [00:12<00:21, 436.40it/s]     44%|####4     | 7278/16384 [00:12<00:18, 493.77it/s]     45%|####4     | 7330/16384 [00:13<00:20, 447.47it/s]     45%|####5     | 7377/16384 [00:13<00:21, 415.15it/s]     45%|####5     | 7427/16384 [00:13<00:20, 432.52it/s]     46%|####5     | 7521/16384 [00:13<00:17, 496.40it/s]     46%|####6     | 7571/16384 [00:13<00:20, 426.30it/s]     47%|####6     | 7650/16384 [00:13<00:17, 509.67it/s]     47%|####7     | 7705/16384 [00:13<00:18, 478.24it/s]     47%|####7     | 7762/16384 [00:13<00:17, 499.44it/s]     48%|####7     | 7815/16384 [00:14<00:19, 445.07it/s]     48%|####7     | 7862/16384 [00:14<00:20, 410.35it/s]     48%|####8     | 7943/16384 [00:14<00:17, 482.67it/s]     49%|####9     | 8041/16384 [00:14<00:13, 605.50it/s]     50%|####9     | 8121/16384 [00:14<00:14, 565.72it/s]     50%|####9     | 8181/16384 [00:14<00:15, 528.91it/s]     51%|#####     | 8349/16384 [00:14<00:10, 751.41it/s]     51%|#####1    | 8427/16384 [00:15<00:13, 599.66it/s]     52%|#####1    | 8493/16384 [00:15<00:14, 544.60it/s]     53%|#####2    | 8605/16384 [00:15<00:11, 667.88it/s]     53%|#####2    | 8680/16384 [00:15<00:13, 570.84it/s]     53%|#####3    | 8745/16384 [00:15<00:15, 490.87it/s]     54%|#####3    | 8843/16384 [00:15<00:14, 519.70it/s]     54%|#####4    | 8919/16384 [00:15<00:13, 564.89it/s]     55%|#####4    | 8981/16384 [00:16<00:13, 555.92it/s]     55%|#####5    | 9054/16384 [00:16<00:13, 551.55it/s]     56%|#####5    | 9112/16384 [00:16<00:15, 479.70it/s]     56%|#####6    | 9229/16384 [00:16<00:12, 577.05it/s]     57%|#####6    | 9289/16384 [00:16<00:14, 475.83it/s]     58%|#####8    | 9522/16384 [00:16<00:09, 713.88it/s]     59%|#####8    | 9593/16384 [00:17<00:10, 621.77it/s]     59%|#####8    | 9655/16384 [00:17<00:11, 578.03it/s]     59%|#####9    | 9712/16384 [00:17<00:11, 556.33it/s]     60%|#####9    | 9767/16384 [00:17<00:13, 478.20it/s]     60%|######    | 9866/16384 [00:17<00:12, 512.33it/s]     61%|######    | 9919/16384 [00:17<00:12, 515.68it/s]     61%|######    | 9971/16384 [00:17<00:13, 473.44it/s]     61%|######1   | 10019/16384 [00:18<00:14, 440.94it/s]     61%|######1   | 10063/16384 [00:18<00:14, 424.45it/s]     62%|######1   | 10128/16384 [00:18<00:13, 472.59it/s]     62%|######2   | 10196/16384 [00:18<00:12, 476.79it/s]     63%|######2   | 10245/16384 [00:18<00:14, 420.98it/s]     63%|######2   | 10293/16384 [00:18<00:14, 430.08it/s]     63%|######3   | 10337/16384 [00:18<00:14, 425.37it/s]     64%|######3   | 10440/16384 [00:18<00:10, 576.74it/s]     64%|######4   | 10500/16384 [00:19<00:11, 504.11it/s]     65%|######4   | 10639/16384 [00:19<00:08, 660.24it/s]     65%|######5   | 10707/16384 [00:19<00:11, 494.78it/s]     66%|######5   | 10763/16384 [00:19<00:11, 472.97it/s]     66%|######6   | 10815/16384 [00:19<00:11, 468.94it/s]     66%|######6   | 10881/16384 [00:19<00:10, 508.06it/s]     67%|######7   | 11032/16384 [00:19<00:07, 754.04it/s]     69%|######8   | 11254/16384 [00:20<00:05, 864.48it/s]     69%|######9   | 11343/16384 [00:20<00:07, 714.13it/s]     70%|######9   | 11419/16384 [00:20<00:08, 604.74it/s]     71%|#######1  | 11677/16384 [00:20<00:04, 992.96it/s]     72%|#######2  | 11800/16384 [00:20<00:06, 665.83it/s]     73%|#######2  | 11896/16384 [00:21<00:07, 607.36it/s]     73%|#######3  | 11977/16384 [00:21<00:07, 603.34it/s]     74%|#######4  | 12156/16384 [00:21<00:05, 725.95it/s]     75%|#######4  | 12268/16384 [00:21<00:06, 677.93it/s]     75%|#######5  | 12344/16384 [00:21<00:06, 611.73it/s]     76%|#######5  | 12411/16384 [00:22<00:07, 565.92it/s]     76%|#######6  | 12471/16384 [00:22<00:07, 541.95it/s]     76%|#######6  | 12527/16384 [00:22<00:07, 505.03it/s]     77%|#######6  | 12579/16384 [00:22<00:08, 464.67it/s]     77%|#######7  | 12626/16384 [00:22<00:08, 455.66it/s]     78%|#######8  | 12790/16384 [00:22<00:04, 735.29it/s]     79%|#######9  | 12965/16384 [00:22<00:03, 990.59it/s]     80%|#######9  | 13074/16384 [00:23<00:05, 614.99it/s]     80%|########  | 13160/16384 [00:23<00:05, 544.90it/s]     81%|########  | 13233/16384 [00:23<00:05, 528.28it/s]     81%|########1 | 13298/16384 [00:23<00:06, 507.09it/s]     82%|########1 | 13357/16384 [00:23<00:06, 492.80it/s]     82%|########1 | 13412/16384 [00:23<00:06, 441.44it/s]     82%|########2 | 13486/16384 [00:24<00:05, 503.59it/s]     83%|########2 | 13542/16384 [00:24<00:05, 486.18it/s]     83%|########3 | 13623/16384 [00:24<00:04, 562.33it/s]     84%|########3 | 13715/16384 [00:24<00:05, 514.35it/s]     84%|########4 | 13771/16384 [00:24<00:05, 453.33it/s]     84%|########4 | 13820/16384 [00:24<00:06, 417.78it/s]     85%|########4 | 13865/16384 [00:24<00:05, 423.54it/s]     85%|########4 | 13912/16384 [00:24<00:06, 405.24it/s]     85%|########5 | 13993/16384 [00:25<00:04, 501.31it/s]     86%|########5 | 14047/16384 [00:25<00:05, 421.86it/s]     86%|########6 | 14110/16384 [00:25<00:04, 460.32it/s]     86%|########6 | 14160/16384 [00:25<00:05, 435.05it/s]     87%|########6 | 14227/16384 [00:25<00:04, 449.96it/s]     87%|########7 | 14327/16384 [00:25<00:04, 507.02it/s]     88%|########7 | 14379/16384 [00:25<00:04, 493.48it/s]     89%|########8 | 14509/16384 [00:26<00:02, 688.54it/s]     90%|########9 | 14701/16384 [00:26<00:01, 991.96it/s]     91%|#########1| 14965/16384 [00:26<00:00, 1429.69it/s]     93%|#########2| 15194/16384 [00:26<00:01, 1155.07it/s]     94%|#########3| 15328/16384 [00:26<00:01, 710.69it/s]      94%|#########4| 15432/16384 [00:27<00:01, 700.15it/s]     95%|#########4| 15525/16384 [00:27<00:01, 575.42it/s]     95%|#########5| 15600/16384 [00:27<00:01, 576.71it/s]     96%|#########5| 15670/16384 [00:27<00:01, 560.80it/s]     96%|#########6| 15769/16384 [00:27<00:01, 563.45it/s]     97%|#########6| 15837/16384 [00:27<00:01, 534.92it/s]     97%|#########7| 15910/16384 [00:28<00:00, 573.73it/s]     98%|#########7| 15979/16384 [00:28<00:00, 599.27it/s]     98%|#########7| 16043/16384 [00:28<00:00, 570.37it/s]     98%|#########8| 16103/16384 [00:28<00:00, 575.11it/s]     99%|#########8| 16163/16384 [00:28<00:00, 493.78it/s]     99%|#########9| 16264/16384 [00:28<00:00, 546.52it/s]    100%|#########9| 16335/16384 [00:28<00:00, 516.57it/s]    100%|##########| 16384/16384 [00:28<00:00, 566.61it/s]
      0%|          | 0/16384 [00:00<?, ?it/s]      2%|1         | 261/16384 [00:00<00:06, 2606.14it/s]      3%|3         | 522/16384 [00:00<00:06, 2605.23it/s]      5%|4         | 783/16384 [00:00<00:05, 2600.29it/s]      6%|6         | 1044/16384 [00:00<00:05, 2598.43it/s]      8%|7         | 1304/16384 [00:00<00:05, 2596.12it/s]     10%|9         | 1565/16384 [00:00<00:05, 2598.42it/s]     11%|#1        | 1825/16384 [00:00<00:05, 2595.95it/s]     13%|#2        | 2087/16384 [00:00<00:05, 2600.85it/s]     14%|#4        | 2348/16384 [00:00<00:05, 2596.14it/s]     16%|#5        | 2608/16384 [00:01<00:05, 2593.32it/s]     18%|#7        | 2870/16384 [00:01<00:05, 2600.78it/s]     19%|#9        | 3131/16384 [00:01<00:05, 2601.08it/s]     21%|##        | 3393/16384 [00:01<00:04, 2604.32it/s]     22%|##2       | 3654/16384 [00:01<00:04, 2585.23it/s]     24%|##3       | 3913/16384 [00:01<00:04, 2583.47it/s]     25%|##5       | 4175/16384 [00:01<00:04, 2593.20it/s]     27%|##7       | 4435/16384 [00:01<00:04, 2590.33it/s]     29%|##8       | 4696/16384 [00:01<00:04, 2595.53it/s]     30%|###       | 4956/16384 [00:01<00:04, 2593.33it/s]     32%|###1      | 5217/16384 [00:02<00:04, 2596.22it/s]     33%|###3      | 5477/16384 [00:02<00:04, 2596.39it/s]     35%|###5      | 5738/16384 [00:02<00:04, 2599.40it/s]     37%|###6      | 5998/16384 [00:02<00:03, 2598.89it/s]     38%|###8      | 6259/16384 [00:02<00:03, 2599.52it/s]     40%|###9      | 6520/16384 [00:02<00:03, 2600.29it/s]     41%|####1     | 6781/16384 [00:02<00:03, 2601.10it/s]     43%|####2     | 7042/16384 [00:02<00:03, 2600.64it/s]     45%|####4     | 7303/16384 [00:02<00:03, 2602.13it/s]     46%|####6     | 7564/16384 [00:02<00:03, 2600.82it/s]     48%|####7     | 7825/16384 [00:03<00:03, 2599.38it/s]     49%|####9     | 8085/16384 [00:03<00:03, 2597.32it/s]     51%|#####     | 8346/16384 [00:03<00:03, 2600.00it/s]     53%|#####2    | 8607/16384 [00:03<00:02, 2602.94it/s]     54%|#####4    | 8868/16384 [00:03<00:02, 2601.23it/s]     56%|#####5    | 9129/16384 [00:03<00:02, 2599.65it/s]     57%|#####7    | 9389/16384 [00:03<00:02, 2598.72it/s]     59%|#####8    | 9649/16384 [00:03<00:02, 2599.08it/s]     60%|######    | 9909/16384 [00:03<00:02, 2597.89it/s]     62%|######2   | 10170/16384 [00:03<00:02, 2599.55it/s]     64%|######3   | 10430/16384 [00:04<00:02, 2595.38it/s]     65%|######5   | 10690/16384 [00:04<00:02, 2596.51it/s]     67%|######6   | 10950/16384 [00:04<00:02, 2595.65it/s]     68%|######8   | 11211/16384 [00:04<00:01, 2597.35it/s]     70%|#######   | 11471/16384 [00:04<00:01, 2596.41it/s]     72%|#######1  | 11732/16384 [00:04<00:01, 2597.59it/s]     73%|#######3  | 11993/16384 [00:04<00:01, 2598.93it/s]     75%|#######4  | 12253/16384 [00:04<00:01, 2598.48it/s]     76%|#######6  | 12515/16384 [00:04<00:01, 2603.59it/s]     78%|#######7  | 12776/16384 [00:04<00:01, 2602.30it/s]     80%|#######9  | 13037/16384 [00:05<00:01, 2597.14it/s]     81%|########1 | 13298/16384 [00:05<00:01, 2598.56it/s]     83%|########2 | 13558/16384 [00:05<00:01, 2596.04it/s]     84%|########4 | 13820/16384 [00:05<00:00, 2601.78it/s]     86%|########5 | 14081/16384 [00:05<00:00, 2598.18it/s]     88%|########7 | 14342/16384 [00:05<00:00, 2599.15it/s]     89%|########9 | 14602/16384 [00:05<00:00, 2595.37it/s]     91%|######### | 14862/16384 [00:05<00:00, 2596.21it/s]     92%|#########2| 15122/16384 [00:05<00:00, 2595.51it/s]     94%|#########3| 15382/16384 [00:05<00:00, 2573.12it/s]     95%|#########5| 15641/16384 [00:06<00:00, 2576.41it/s]     97%|#########7| 15902/16384 [00:06<00:00, 2585.09it/s]     99%|#########8| 16162/16384 [00:06<00:00, 2587.35it/s]    100%|##########| 16384/16384 [00:06<00:00, 2596.29it/s]
      0%|          | 0/16384 [00:00<?, ?it/s]      2%|1         | 274/16384 [00:00<00:05, 2732.79it/s]      3%|3         | 550/16384 [00:00<00:05, 2743.40it/s]      5%|5         | 825/16384 [00:00<00:05, 2737.47it/s]      7%|6         | 1099/16384 [00:00<00:05, 2735.37it/s]      8%|8         | 1373/16384 [00:00<00:05, 2734.46it/s]     10%|#         | 1647/16384 [00:00<00:05, 2726.40it/s]     12%|#1        | 1922/16384 [00:00<00:05, 2732.10it/s]     13%|#3        | 2197/16384 [00:00<00:05, 2737.01it/s]     15%|#5        | 2474/16384 [00:00<00:05, 2744.87it/s]     17%|#6        | 2749/16384 [00:01<00:04, 2746.18it/s]     18%|#8        | 3026/16384 [00:01<00:04, 2752.64it/s]     20%|##        | 3302/16384 [00:01<00:04, 2749.47it/s]     22%|##1       | 3577/16384 [00:01<00:04, 2749.55it/s]     24%|##3       | 3852/16384 [00:01<00:04, 2747.16it/s]     25%|##5       | 4127/16384 [00:01<00:04, 2746.74it/s]     27%|##6       | 4402/16384 [00:01<00:04, 2745.75it/s]     29%|##8       | 4678/16384 [00:01<00:04, 2749.86it/s]     30%|###       | 4953/16384 [00:01<00:04, 2749.29it/s]     32%|###1      | 5230/16384 [00:01<00:04, 2754.40it/s]     34%|###3      | 5507/16384 [00:02<00:03, 2756.84it/s]     35%|###5      | 5783/16384 [00:02<00:03, 2756.52it/s]     37%|###6      | 6059/16384 [00:02<00:03, 2708.05it/s]     39%|###8      | 6330/16384 [00:02<00:03, 2672.87it/s]     40%|####      | 6598/16384 [00:02<00:03, 2633.32it/s]     42%|####1     | 6862/16384 [00:02<00:03, 2628.22it/s]     44%|####3     | 7129/16384 [00:02<00:03, 2638.22it/s]     45%|####5     | 7393/16384 [00:02<00:03, 2634.55it/s]     47%|####6     | 7659/16384 [00:02<00:03, 2639.78it/s]     48%|####8     | 7933/16384 [00:02<00:03, 2667.26it/s]     50%|#####     | 8208/16384 [00:03<00:03, 2690.52it/s]     52%|#####1    | 8483/16384 [00:03<00:02, 2705.59it/s]     53%|#####3    | 8755/16384 [00:03<00:02, 2708.75it/s]     55%|#####5    | 9028/16384 [00:03<00:02, 2713.84it/s]     57%|#####6    | 9303/16384 [00:03<00:02, 2724.45it/s]     58%|#####8    | 9576/16384 [00:03<00:02, 2724.48it/s]     60%|######    | 9850/16384 [00:03<00:02, 2728.01it/s]     62%|######1   | 10125/16384 [00:03<00:02, 2732.92it/s]     63%|######3   | 10401/16384 [00:03<00:02, 2740.48it/s]     65%|######5   | 10677/16384 [00:03<00:02, 2746.03it/s]     67%|######6   | 10953/16384 [00:04<00:01, 2747.81it/s]     69%|######8   | 11229/16384 [00:04<00:01, 2751.37it/s]     70%|#######   | 11505/16384 [00:04<00:01, 2753.52it/s]     72%|#######1  | 11781/16384 [00:04<00:01, 2748.34it/s]     74%|#######3  | 12057/16384 [00:04<00:01, 2749.41it/s]     75%|#######5  | 12334/16384 [00:04<00:01, 2753.19it/s]     77%|#######6  | 12610/16384 [00:04<00:01, 2746.96it/s]     79%|#######8  | 12886/16384 [00:04<00:01, 2748.73it/s]     80%|########  | 13161/16384 [00:04<00:01, 2746.62it/s]     82%|########2 | 13437/16384 [00:04<00:01, 2749.46it/s]     84%|########3 | 13714/16384 [00:05<00:00, 2754.53it/s]     85%|########5 | 13991/16384 [00:05<00:00, 2758.00it/s]     87%|########7 | 14268/16384 [00:05<00:00, 2758.84it/s]     89%|########8 | 14544/16384 [00:05<00:00, 2751.52it/s]     90%|######### | 14820/16384 [00:05<00:00, 2750.52it/s]     92%|#########2| 15096/16384 [00:05<00:00, 2748.18it/s]     94%|#########3| 15373/16384 [00:05<00:00, 2751.76it/s]     96%|#########5| 15649/16384 [00:05<00:00, 2742.23it/s]     97%|#########7| 15924/16384 [00:05<00:00, 2721.06it/s]     99%|#########8| 16197/16384 [00:05<00:00, 2706.45it/s]    100%|##########| 16384/16384 [00:06<00:00, 2727.20it/s]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 45 minutes  16.968 seconds)


.. _sphx_glr_download_tutorials_b_general_plot_e_switched_capacitor_digital_control.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_e_switched_capacitor_digital_control.py <plot_e_switched_capacitor_digital_control.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_e_switched_capacitor_digital_control.ipynb <plot_e_switched_capacitor_digital_control.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
